#!/usr/bin/env ansible-playbook
---
#==============================================================#
# File      :   pgsql.yml
# Mtime     :   2020-05-12
# Mtime     :   2022-11-28
# Desc      :   init postgres cluster/instance
# Path      :   pgsql.yml
# Copyright (C) 2018-2022 Ruohang Feng (rh@vonng.com)
#==============================================================#
- name: PGSQL INIT
  become: yes
  hosts: all
  gather_facts: no
  roles:
    - { role: node_id     , tags: node-id  } # get node identity (always)
    - { role: pg_id       , tags: pg-id    } # get pgsql identity (always)
    - { role: postgres    , tags: pgsql    } # init postgres cluster/instance
    - { role: pg_vip      , tags: vip      } # init postgres vip address
    - { role: pg_exporter , tags: monitor  } # setup postgres monitor
    - { role: pg_register , tags: register } # register postgres services


#pg_service_provider: local                   # where to expose postgres service? local haproxy, or lb group names

#==============================================================#
# Playbook : Init PGSQL Cluster/Instance on Pigsty Node
#==============================================================#
#  Warning: You have to run this playbook on provisioned nodes
#  which should be provisioned by ./node.yml playbook ahead
#  you can run both at once with bin/createpg <cluster|ip>
#    bin/createpg pg-test
#
#  Init cluster `pg-test`
#     pgsql.yml -l pg-test
#
#  Init instance (10.10.10.13) among cluster `pg-test`
#     pgsql.yml -l 10.10.10.13
#
#  Re-init postgres instance only on node 10.10.10.13
#     pgsql.yml -l 10.10.10.13 --tags=postgres
#
#  Re-init pgbouncer instance only on node 10.10.10.13
#     pgsql.yml -l 10.10.10.13 --tags=pgbouncer
#
#  Re-deploy monitor component
#     pgsql.yml --tags=monitor
#
#  Refresh HBA rules
#     pgsql.yml --tags=pg_hba   (or bin/reloadhba <cluster>)
##    pgsql.yml --tags=pgb_hba  (or bin/reloadhba <cluster>)
#
#  Register cluster/instance to infrastructure
#     pgsql.yml --tags=register             # register all
#     pgsql.yml --tags=register_prometheus  # monitor target
#     pgsql.yml --tags=register_grafana     # pgsql datasource
#==============================================================#
...