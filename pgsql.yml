#!/usr/bin/env ansible-playbook
---
#==============================================================#
# File      :   pgsql.yml
# Mtime     :   2020-05-12
# Mtime     :   2021-03-20
# Desc      :   init postgres cluster/instance
# Path      :   pgsql.yml
# Copyright (C) 2018-2022 Ruohang Feng (rh@vonng.com)
#==============================================================#


#==============================================================#
# Playbook : Init PGSQL Cluster/Instance on Pigsty Node
#==============================================================#
#  Warning: You have to run this playbook on provisioned nodes
#  which should be provisioned by ./nodes.yml playbook ahead
#  you can run both at once with bin/createpg <cluster|ip>
#    bin/createpg pg-test
#
#  Init cluster `pg-test`
#     pgsql.yml -l pg-test
#
#  Init instance (10.10.10.13) among cluster `pg-test`
#     pgsql.yml -l 10.10.10.13
#
#  Re-init postgres instance only on node 10.10.10.13
#     pgsql.yml -l10.10.10.13 --tags=postgres
#
#  Re-deploy monitor component
#     pgsql.yml --tags=monitor
#
#  Replace exporter with new binary version
#     pgsql.yml --tags=monitor -e exporter_install=binary
#
#  Refresh (haproxy) services
#     pgsql.yml --tags=service (or bin/reloadha <cluster>)
#
#  Refresh HBA rules
#     pgsql.yml --tags=pg_hba  (or bin/reloadhba <cluster>)
#
#  Register cluster/instance to infrastructure
#     pgsql.yml --tags=register             # register all
#     pgsql.yml --tags=register_consul      # service discovery
#     pgsql.yml --tags=register_prometheus  # monitor target
#     pgsql.yml --tags=register_grafana     # pgsql datasource
#     pgsql.yml --tags=register_nginx       # haproxy admin page
#==============================================================#

# init postgres cluster/instance
- name: Pgsql Init
  become: yes
  hosts: all
  gather_facts: no
  tags: pgsql-init
  roles:

    - role: postgres        # init postgres pgbouncer patroni
      tags: postgres

    - role: service         # init service , haproxy , vip
      tags: service

    - role: pg_exporter     # init monitor exporters
      tags: pg-exporter

    - role: pg_register     # register postgres cluster/instance to infra
      tags: pg-register

#---------------------------------------------------------------
...
