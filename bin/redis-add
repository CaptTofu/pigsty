#!/bin/bash
set -euo pipefail

#==============================================================#
# File      :   bin/redis-add
# Ctime     :   2022-05-14
# Mtime     :   2022-05-14
# Desc      :   Wrapper of redis playbook
# Usage     :   bin/redis-add <cluster|ip> [...port]
# Path      :   bin/redis-add
# Depend    :   pigsty playbook redis.yml
# License   :   AGPLv3
# Copyright (C) 2018-2022 Ruohang Feng
#==============================================================#

#==============================================================#
# environment
#==============================================================#
APP_NAME="$(basename $0)"
APP_DIR="$(cd $(dirname $0) && pwd)"
PIGSTY_HOME=$(cd $(dirname ${APP_DIR}) && pwd)


#==============================================================#
# log util
#==============================================================#
__CN='\033[0m'    # no color
__CB='\033[0;30m' # black
__CR='\033[0;31m' # red
__CG='\033[0;32m' # green
__CY='\033[0;33m' # yellow
__CB='\033[0;34m' # blue
__CM='\033[0;35m' # magenta
__CC='\033[0;36m' # cyan
__CW='\033[0;37m' # white
function log_info() {  printf "[${__CG} OK ${__CN}] ${__CG}$*${__CN}\n";   }
function log_warn() {  printf "[${__CY}WARN${__CN}] ${__CY}$*${__CN}\n";   }
function log_error() { printf "[${__CR}FAIL${__CN}] ${__CR}$*${__CN}\n";   }
function log_debug() { printf "[${__CB}HINT${__CN}] ${__CB}$*${__CN}\n"; }
function log_input() { printf "[${__CM} IN ${__CN}] ${__CM}$*\n=> ${__CN}"; }
function log_hint()  { printf "${__CB}$*${__CN}\n"; }
#==============================================================#


#==============================================================#
# parameters
#==============================================================#
REDIS_SELECTOR=${1-''}
log_info "redis selector: ${REDIS_SELECTOR}"

if [[ -z "${REDIS_SELECTOR}" ]]; then
	log_error "redis cluster/node is empty"
	log_hint "bin/create_redis ip [...port]"
	exit 1
fi

if (($# == 1)); then
	# init redis cluster or node
	log_info "init redis ${REDIS_SELECTOR} : ./redis.yml -l ${REDIS_SELECTOR}"
	${PIGSTY_HOME}/redis.yml -l ${REDIS_SELECTOR}
else
	# init sinle redis instance
	for ((i=2; i<=$#; i++))
	do
		log_info "init redis instance ${REDIS_SELECTOR}:${!i} with redis.yml -l ${REDIS_SELECTOR} -e redis_port=${!i} -t redis"
		${PIGSTY_HOME}/redis.yml -l ${REDIS_SELECTOR} -e redis_port=${!i}
	done
fi


# TEST CASES
# bin/redis-add redis-common
# bin/redis-add 10.10.10.10
# bin/redis-add 10.10.10.10 6501 6502
