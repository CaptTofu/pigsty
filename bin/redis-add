#!/bin/bash
set -euo pipefail
#==============================================================#
# File      :   redis-add
# Desc      :   Create Redis Cluster/Node/Instances
# Ctime     :   2022-05-14
# Mtime     :   2022-05-14
# Path      :   bin/redis-add
# Deps      :   ansible-playbook, redis.yml
# Author    :   Ruohang Feng (rh@vonng.com)
# License   :   AGPLv3
#==============================================================#
APP_NAME="$(basename $0)"
APP_DIR="$(cd $(dirname $0) && pwd)"
PIGSTY_HOME=$(cd $(dirname ${APP_DIR}) && pwd)


#--------------------------------------------------------------#
# Usage
#--------------------------------------------------------------#
# bin/redis-add <cluster|ip> [...port]
#
# if ports are specified, only those corresponding instances will be added
#
# Examples:
#   bin/redis-add redis-ms                # init a redis cluster
#   bin/redis-add 10.10.10.10             # init a redis-node
#   bin/redis-add 10.10.10.10 6501 6502   # init specific redis instances


#--------------------------------------------------------------#
# Utils
#--------------------------------------------------------------#
__CN='\033[0m';__CB='\033[0;30m';__CR='\033[0;31m';__CG='\033[0;32m';
__CY='\033[0;33m';__CB='\033[0;34m';__CM='\033[0;35m';__CC='\033[0;36m';__CW='\033[0;37m';
function log_info() {  printf "[${__CG} OK ${__CN}] ${__CG}$*${__CN}\n";   }
function log_warn() {  printf "[${__CY}WARN${__CN}] ${__CY}$*${__CN}\n";   }
function log_error() { printf "[${__CR}FAIL${__CN}] ${__CR}$*${__CN}\n";   }
function log_debug() { printf "[${__CB}HINT${__CN}] ${__CB}$*${__CN}\n"; }
function log_input() { printf "[${__CM} IN ${__CN}] ${__CM}$*\n=> ${__CN}"; }
function log_hint()  { printf "${__CB}$*${__CN}\n"; }
function log_line()  { printf "${__CM}[$*] ===========================================${__CN}\n"; }


#--------------------------------------------------------------#
# Param
#--------------------------------------------------------------#
REDIS_SELECTOR=${1-''}
log_info "redis selector: ${REDIS_SELECTOR}"

if [[ -z "${REDIS_SELECTOR}" ]]; then
	log_error "redis selector is empty"
	log_hint "bin/redis-add <cls|ip> [port...]"
	exit 1
fi

if (($# == 1)); then
	# init redis cluster or node
	log_info "init redis ${REDIS_SELECTOR} : ./redis.yml -l ${REDIS_SELECTOR}"
	${PIGSTY_HOME}/redis.yml -l ${REDIS_SELECTOR}
else
	# init single redis instance
	for ((i=2; i<=$#; i++))
	do
		log_info "init redis instance ${REDIS_SELECTOR}:${!i} with redis.yml -l ${REDIS_SELECTOR} -e redis_port=${!i} -t redis"
		${PIGSTY_HOME}/redis.yml -l ${REDIS_SELECTOR} -e redis_port=${!i}
	done
fi
