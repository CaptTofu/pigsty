#!/bin/bash
set -euo pipefail

#==============================================================#
# File      :   ssh
# Ctime     :   2021-04-20
# Mtime     :   2021-07-05
# Desc      :   setup ssh access for VAGRANT SANDBOX (from host to vm)
# Note      :   vagrant binary, vagrant/Vagrantfile required
# Path      :   bin/ssh
# Copyright (C) 2018-2021 Ruohang Feng
#==============================================================#

PROG_NAME="$(basename $0))"
PROG_DIR="$(cd $(dirname $0) && pwd)"
PIGSTY_HOME="$(cd $(dirname ${PROG_DIR}) && pwd)"
VAGRANT_DIR=${PIGSTY_HOME}/vagrant

#==============================================================#
# color log util
#==============================================================#
__CN='\033[0m'    # no color
__CB='\033[0;30m' # black
__CR='\033[0;31m' # red
__CG='\033[0;32m' # green
__CY='\033[0;33m' # yellow
__CB='\033[0;34m' # blue
__CM='\033[0;35m' # magenta
__CC='\033[0;36m' # cyan
__CW='\033[0;37m' # white
function log_info() {  printf "[${__CG}INFO${__CN}] ${__CG}$*${__CN}\n";   }
function log_warn() {  printf "[${__CY}WARN${__CN}] ${__CY}$*${__CN}\n";   }
function log_error() { printf "[${__CR}FAIL${__CN}] ${__CR}$*${__CN}\n";   }
function log_debug() { printf "[${__CB}HINT${__CN}] ${__CB}$*${__CN}\n"; }
function log_input() { printf "[${__CM} IN ${__CN}] ${__CM}$*\n=> ${__CN}"; }
function log_hint()  { printf "${__CB}$*${__CN}"; }

# check vagrant installed
if ! command -v vagrant &> /dev/null
then
    log_error "vagrant binary not found"
    exit 1
fi

# check vagrant directory exists
if [[ ! -d ${VAGRANT_DIR} ]]
then
    log_error "vagrant dir not exists"
    exit 2
fi

# check Vagrantfile exists
cd ${VAGRANT_DIR}
if [[ ! -f Vagrantfile ]]
then
    log_error "Vagrantfile not found"
    exit 3
fi

# create ssh dir
if [[ ! -d ~/.ssh ]]
then
    log_warn "~/.ssh not exist, create"
    mkdir ~/.ssh
    chmod 0700 ~/.ssh
fi

# create default ssh config file
if [[ ! -f ~/.ssh/config ]]
then
    log_warn "~/.ssh/config not exist, create"
    touch ~/.ssh/config
    chmod 0600 ~/.ssh/config
fi

log_info "vagrant ssh-config (please wait... about 10 seconds)"

# write vagrant config to ~/.ssh/pigsty_config
vagrant ssh-config > ~/.ssh/pigsty_config 2>/dev/null; true
log_info "vagrant ssh-config > ~/.ssh/pigsty_config"

# allow direct ip access
vagrant ssh-config | sed 's/meta/10.10.10.10/g' | sed 's/node-1/10.10.10.11/g' | sed 's/node-2/10.10.10.12/g' | sed 's/node-3/10.10.10.13/g' >> ~/.ssh/pigsty_config 2>/dev/null; true

# write vagrant vm ssh config
vagrant ssh-config > ${HOME}/.ssh/pigsty_config 2>/dev/null; true
cat ${HOME}/.ssh/pigsty_config | sed 's/meta/10.10.10.10/g' | sed 's/node-1/10.10.10.11/g' | sed 's/node-2/10.10.10.12/g' | sed 's/node-3/10.10.10.13/g' >> ${HOME}/.ssh/pigsty_config
log_info "~/.ssh/pigsty_config generated"

# append Include to .ssh/config
if ! grep --quiet "pigsty_config" ~/.ssh/config ; then
    (echo 'Include ~/.ssh/pigsty_config' && cat ~/.ssh/config) >  ~/.ssh/config.tmp;
    mv ~/.ssh/config.tmp ~/.ssh/config && chmod 0600 ~/.ssh/config;
    log_info "write Include cmd to ~/.ssh/config"
fi

# append StrictHostKeyChecking=no to .ssh/config
if ! grep --quiet "StrictHostKeyChecking=no" ~/.ssh/config ; then
    (echo 'StrictHostKeyChecking=no' && cat ~/.ssh/config) >  ~/.ssh/config.tmp;
    mv ~/.ssh/config.tmp ~/.ssh/config && chmod 0600 ~/.ssh/config;
    log_info "write Include deri to ~/.ssh/config"
fi

printf "\033[0;32m[INFO] ~/.ssh/pigsty_config \033[0m\n" >&2
cat ${HOME}/.ssh/pigsty_config