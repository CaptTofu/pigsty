#!/usr/bin/env ansible-playbook
---
#==============================================================#
# File      :   node.yml
# Mtime     :   2020-05-12
# Mtime     :   2022-11-09
# Desc      :   init node for pigsty
# Path      :   node.yml
# Copyright (C) 2018-2022 Ruohang Feng (rh@vonng.com)
#==============================================================#

#---------------------------------------------------------------
# usage
#---------------------------------------------------------------
# 1. make sure you have nopass ssh & sudo access to target node
# 2. make sure you have defined these nodes in your inventory
# 3. run ./node.yml -l <selector> to finish node provisioning
#--------------------------------------------------------------
# ./node.yml -t node-id          # print node identity
# ./node.yml -t node_admin       # create admin user for nodes
# ./node.yml -t node-exporter    # deploy and register node-exporter
# ./node.yml -t node-register    # register node_exporter to prometheus
# ...
# ./node.yml -t dcs -e dcs_clean=clean  # force reinstall consul
# ./node.yml -t node_admin -k -K -e ansible_user=<another admin>
# ...
#--------------------------------------------------------------

#---------------------------------------------------------------
# node identity
#---------------------------------------------------------------
# nodename : optional, used as node identity, default to existing name
# node_cluster : optional, used as node identity, default to `nodes`
#
#  cls: node_cluster (explicit) > pg_cluster (when pg_hostname) > 'nodes'
#  ins: nodename (explicit) > pg_instance (when pg_hostname) > node.hostname
#
# you can overwrite node identity with pgsql identity on 1:1 deployment
# with option `pg_hostname: true`
#
# 1. node identity can be specified by nodename or node_cluster explicitly (override all)
# 2. if node identity is not specified and pg_hostname is set, it will use pg's instance identity if applicable
# 3. otherwise, node_cluster will fall back to `nodes` and nodename will fall back to node's current hostname
#---------------------------------------------------------------

#---------------------------------------------------------------
# identity
#---------------------------------------------------------------
- name: Identity
  hosts: all
  gather_facts: no
  tags: id
  roles:

    - role: node_id             # get node identity (always)
      tags: node-id

    #- role: pg_id
    #  tags: pg-id
    #  when: pg_cluster is defined


#---------------------------------------------------------------
# Node Init
#---------------------------------------------------------------
- name: Node Init
  become: yes
  hosts: all
  gather_facts: no
  tags: node-init
  roles:

    # prepare node for pigsty
    - role: node
      tags: node

    - role: ca
      tags: ca


#---------------------------------------------------------------
# Node Docker
#---------------------------------------------------------------
- name: Node Docker
  become: yes
  hosts: all
  gather_facts: no
  tags: node-docker
  roles:
    # init docker if enabled
    - role: docker
      tags: docker
      when: docker_enabled|bool

#---------------------------------------------------------------
# Node DCS Service (Consul Server/Agent & Etcd)
#---------------------------------------------------------------
- name: Node DCS
  become: yes
  hosts: all
  gather_facts: no
  tags: node-dcs
  roles:

    # init dcs:consul server/agent if enabled
    - role: consul
      tags: [ dcs, consul ]
      when: consul_enabled|bool

    # init dcs:etcd server/agent if enabled
    - role: etcd
      tags: [ dcs, etcd ]
      when: etcd_enabled|bool


#---------------------------------------------------------------
# Node monitor
#---------------------------------------------------------------
- name: Node Monitor
  become: yes
  hosts: all
  gather_facts: no
  tags: node-monitor
  roles:

    # init & register node exporter
    - role: node_exporter
      tags: node-exporter
      when: node_exporter_enabled|bool

    # init & register promtail log agent
    - role: promtail
      tags: promtail
      when: promtail_enabled|bool

    # register node-exporter & docker to prometheus
    - role: node_register
      tags: node-register

#---------------------------------------------------------------
...