---
######################################################################
# File      :   pigsty-redis.yml
# Desc      :   Pigsty 4-node demo for redis
# Link      :   https://pigsty.cc/#/v-config
# Ctime     :   2020-05-22
# Mtime     :   2022-04-11
# Copyright (C) 2018-2022 Ruohang Feng (rh@vonng.com)
######################################################################

######################################################################
#                        Sandbox (4-node)                            #
#====================================================================#
# admin user : vagrant  (nopass ssh & sudo already set)              #
# 1.  meta   : 10.10.10.10  redis-sentinel (6001,6002,6003)          #
# 2.  node-1 : 10.10.10.11  redis-test (cluster: 6501 - 6506)        #
# 3.  node-2 : 10.10.10.12  redis-test (cluster: 6501 - 6506)        #
# 4.  node-3 : 10.10.10.13  redis-common (normal, 6501->6502,6503)   #
######################################################################

all:

  ##################################################################
  #                            CLUSTERS                            #
  ##################################################################
  # meta nodes, common nodes, pgsql, redis, pgsql clusters are defined
  # as k:v pair inside `all.children`. Where the key is cluster name
  # and value is cluster definition consist of two parts:
  # `hosts`: cluster members ip and instance level variables
  # `vars` : cluster level variables
  children:                           # groups definition


    #================================================================#
    #                  Meta Nodes: Admin Controller                  #
    #================================================================#
    meta:   # meta nodes are defined in special group "meta" with flag: `meta_node=true`
      vars: { meta_node: true , ansible_group_priority: 99 }
      hosts: # 10.10.10.10 is the default and only meta node
        10.10.10.10: { }

    #================================================================#
    #                        REDIS Clusters                          #
    #================================================================#

    #----------------------------------#
    # redis sentinel example           #
    #----------------------------------#
    redis-meta:
      hosts:
        10.10.10.10:
          redis_node: 1
          redis_instances:  { 6001 : {} ,6002 : {} , 6003 : {} }
      vars:
        redis_cluster: redis-meta
        redis_mode: sentinel
        redis_max_memory: 128MB

    #----------------------------------#
    # redis cluster example            #
    #----------------------------------#
    redis-test:
      hosts:
        10.10.10.11:
          nodename: redis-test-1
          redis_node: 1
          redis_instances: { 6501 : {} ,6502 : {} ,6503 : {} ,6504 : {} ,6505 : {} ,6506 : {} }
        10.10.10.12:
          nodename: redis-test-2
          redis_node: 2
          redis_instances: { 6501 : {} ,6502 : {} ,6503 : {} ,6504 : {} ,6505 : {} ,6506 : {} }
      vars:
        node_cluster: redis-test            # underlying nodes cluster name
        redis_cluster: redis-test           # name of this redis 'cluster'
        redis_mode: cluster                 # standalone,cluster,sentinel
        redis_max_memory: 64MB              # max memory used by each redis instance
        redis_mem_policy: allkeys-lru       # memory eviction policy

    #----------------------------------#
    # redis standalone example         #
    #----------------------------------#
    redis-common:
      hosts:
        10.10.10.13:
          redis_node: 1
          nodename: redis-common-1
          redis_instances:
            6501: {}
            6502: { replica_of: '10.10.10.13 6501' }
            6503: { replica_of: '10.10.10.13 6501' }
      vars:
        node_cluster: redis-common          # underlying node cluster name
        redis_cluster: redis-common         # name of this redis 'cluster'
        redis_mode: standalone              # standalone,cluster,sentinel
        redis_max_memory: 64MB              # max memory used by each redis instance



  ####################################################################
  #                             VARS                                 #
  ####################################################################
  vars:                              # global variables

    #================================================================#
    #                         VARS: INFRA                            #
    #================================================================#

    #-----------------------------------------------------------------
    # CONNECT
    #-----------------------------------------------------------------
    # ansible_user: vagrant              # which user to be used (when connecting to remote nodes)
    # ansible_password: <ssh pass>       # ssh password to be used (sshpass required)
    # ansible_become_pass: <sudo pass>   # sudo password to be used (not recommended)
    proxy_env:                           # global proxy env when downloading packages
      no_proxy: "localhost,127.0.0.1,10.0.0.0/8,192.168.0.0/16,*.pigsty,*.aliyun.com,mirrors.*,*.myqcloud.com"
      # http_proxy:  # set your proxy here: e.g http://user:pass@proxy.xxx.com
      # https_proxy: # set your proxy here: e.g http://user:pass@proxy.xxx.com
      # all_proxy:   # set your proxy here: e.g http://user:pass@proxy.xxx.com

    #-----------------------------------------------------------------
    # REPO
    #-----------------------------------------------------------------
    repo_enabled: true               # build local repo on this node
    repo_name: pigsty                # repo name, pigsty by default
    repo_address: pigsty             # external address to this repo (ip:port or url)
    repo_port: 80                    # repo listen address, must same as repo_address
    repo_home: /www                  # default repo home dir
    repo_rebuild: false              # force re-download packages
    repo_remove: true                # remove existing upstream repo
    repo_upstreams:                  # where to download packages?
      - name: base
        description: CentOS-$releasever - Base
        gpgcheck: no
        baseurl:
          - https://mirrors.tuna.tsinghua.edu.cn/centos/$releasever/os/$basearch/ # tuna
          - http://mirrors.aliyun.com/centos/$releasever/os/$basearch/
          - http://mirrors.aliyuncs.com/centos/$releasever/os/$basearch/
          - http://mirrors.cloud.aliyuncs.com/centos/$releasever/os/$basearch/    # aliyun
          - http://mirror.centos.org/centos/$releasever/os/$basearch/             # official
      - name: updates
        description: CentOS-$releasever - Updates
        gpgcheck: no
        baseurl:
          - https://mirrors.tuna.tsinghua.edu.cn/centos/$releasever/updates/$basearch/ # tuna
          - http://mirrors.aliyun.com/centos/$releasever/updates/$basearch/
          - http://mirrors.aliyuncs.com/centos/$releasever/updates/$basearch/
          - http://mirrors.cloud.aliyuncs.com/centos/$releasever/updates/$basearch/    # aliyun
          - http://mirror.centos.org/centos/$releasever/updates/$basearch/             # official
      - name: extras
        description: CentOS-$releasever - Extras
        baseurl:
          - https://mirrors.tuna.tsinghua.edu.cn/centos/$releasever/extras/$basearch/ # tuna
          - http://mirrors.aliyun.com/centos/$releasever/extras/$basearch/
          - http://mirrors.aliyuncs.com/centos/$releasever/extras/$basearch/
          - http://mirrors.cloud.aliyuncs.com/centos/$releasever/extras/$basearch/    # aliyun
          - http://mirror.centos.org/centos/$releasever/extras/$basearch/             # official
        gpgcheck: no
      - name: epel
        description: CentOS $releasever - epel
        gpgcheck: no
        baseurl:
          - https://mirrors.tuna.tsinghua.edu.cn/epel/$releasever/$basearch   # tuna
          - http://mirrors.aliyun.com/epel/$releasever/$basearch              # aliyun
          - http://download.fedoraproject.org/pub/epel/$releasever/$basearch  # official
      - name: grafana
        description: Grafana
        enabled: yes
        gpgcheck: no
        baseurl:
          - https://mirrors.tuna.tsinghua.edu.cn/grafana/yum/rpm    # tuna mirror
          - https://packages.grafana.com/oss/rpm                    # official
      - name: prometheus
        description: Prometheus and exporters
        gpgcheck: no
        baseurl: https://packagecloud.io/prometheus-rpm/release/el/$releasever/$basearch # no other mirrors, quite slow
      - name: pgdg-common
        description: PostgreSQL common RPMs for RHEL/CentOS $releasever - $basearch
        gpgcheck: no
        baseurl:
          - http://mirrors.tuna.tsinghua.edu.cn/postgresql/repos/yum/common/redhat/rhel-$releasever-$basearch  # tuna
          - https://download.postgresql.org/pub/repos/yum/common/redhat/rhel-$releasever-$basearch             # official
      - name: pgdg13
        description: PostgreSQL 13 for RHEL/CentOS $releasever - $basearch
        gpgcheck: no
        baseurl:
          - https://mirrors.tuna.tsinghua.edu.cn/postgresql/repos/yum/13/redhat/rhel-$releasever-$basearch    # tuna
          - https://download.postgresql.org/pub/repos/yum/13/redhat/rhel-$releasever-$basearch                # official
      - name: pgdg14
        description: PostgreSQL 14 for RHEL/CentOS $releasever - $basearch
        gpgcheck: no
        baseurl:
          - https://mirrors.tuna.tsinghua.edu.cn/postgresql/repos/yum/14/redhat/rhel-$releasever-$basearch    # tuna
          - https://download.postgresql.org/pub/repos/yum/14/redhat/rhel-$releasever-$basearch                # official
      - name: timescaledb
        description: TimescaleDB for RHEL/CentOS $releasever - $basearch
        gpgcheck: no
        baseurl:
          - https://packagecloud.io/timescale/timescaledb/el/7/$basearch
      - name: centos-sclo
        description: CentOS-$releasever - SCLo
        gpgcheck: no
        baseurl: # mirrorlist: http://mirrorlist.centos.org?arch=$basearch&release=$releasever&repo=sclo-sclo
          - http://mirrors.aliyun.com/centos/$releasever/sclo/$basearch/sclo/
          - http://repo.virtualhosting.hk/centos/$releasever/sclo/$basearch/sclo/
      - name: centos-sclo-rh
        description: CentOS-$releasever - SCLo rh
        gpgcheck: no
        baseurl: # mirrorlist: http://mirrorlist.centos.org?arch=$basearch&release=7&repo=sclo-rh
          - http://mirrors.aliyun.com/centos/$releasever/sclo/$basearch/rh/
          - http://repo.virtualhosting.hk/centos/$releasever/sclo/$basearch/rh/
      - name: nginx
        description: Nginx Official Yum Repo
        skip_if_unavailable: true
        gpgcheck: no
        baseurl: http://nginx.org/packages/centos/$releasever/$basearch/
      - name: harbottle              # for latest consul & kubernetes
        description: Copr repo for main owned by harbottle
        skip_if_unavailable: true
        gpgcheck: no
        baseurl: https://download.copr.fedorainfracloud.org/results/harbottle/main/epel-$releasever-$basearch/
      - name: docker-ce              # for latest docker
        description: Docker CE Stable - $basearch
        skip_if_unavailable: true
        gpgcheck: no
        baseurl:
          - https://mirrors.aliyun.com/docker-ce/linux/centos/$releasever/$basearch/stable
          - https://download.docker.com/linux/centos/$releasever/$basearch/stable

    repo_packages:                   # which packages to be included                                                    #  what to download #
      - epel-release nginx wget yum-utils yum createrepo sshpass zip unzip                                              # ----  boot   ---- #
      - ntp chrony uuid lz4 bzip2 nc pv jq vim-enhanced make patch bash lsof wget git tuned perf ftp lrzsz rsync        # ----  node   ---- #
      - numactl grubby sysstat dstat iotop bind-utils net-tools tcpdump socat ipvsadm telnet ca-certificates keepalived # ----- utils ----- #
      - readline zlib openssl openssh-clients libyaml libxml2 libxslt libevent perl perl-devel perl-ExtUtils*           # ---  deps:pg  --- #
      - readline-devel zlib-devel uuid-devel libuuid-devel libxml2-devel libxslt-devel openssl-devel libicu-devel       # --- deps:devel -- #
      - ed mlocate parted krb5-devel apr apr-util audit                                                                 # --- deps:gpsql -- #
      - grafana prometheus2 pushgateway alertmanager consul consul_exporter consul-template etcd dnsmasq                # -----  meta ----- #
      - node_exporter postgres_exporter nginx_exporter blackbox_exporter redis_exporter                                 # ---- exporter --- #
      - ansible python python-pip python-psycopg2                                                                       # - ansible & py3 - #
      - python3 python3-psycopg2 python36-requests python3-etcd python3-consul python36-urllib3 python36-idna python36-pyOpenSSL python36-cryptography
      - patroni patroni-consul patroni-etcd pgbouncer pg_cli pgbadger pg_activity tail_n_mail                           # -- pgsql common - #
      - pgcenter boxinfo check_postgres emaj pgbconsole pg_bloat_check pgquarrel barman barman-cli pgloader pgFormatter pitrery pspg pgxnclient PyGreSQL pgadmin4
      - postgresql14* postgis32_14* citus_14* pglogical_14* timescaledb-2-postgresql-14 pg_repack_14 wal2json_14        # -- pg14 packages -#
      - pg_qualstats_14 pg_stat_kcache_14 pg_stat_monitor_14 pg_top_14 pg_track_settings_14 pg_wait_sampling_14
      - pg_statement_rollback_14 system_stats_14 plproxy_14 plsh_14 pldebugger_14 plpgsql_check_14 pgmemcache_14 # plr_14
      - mysql_fdw_14 ogr_fdw_14 tds_fdw_14 sqlite_fdw_14 firebird_fdw_14 hdfs_fdw_14 mongo_fdw_14 osm_fdw_14 pgbouncer_fdw_14
      - hypopg_14 geoip_14 rum_14 hll_14 ip4r_14 prefix_14 pguri_14 tdigest_14 topn_14 periods_14
      - bgw_replstatus_14 count_distinct_14 credcheck_14 ddlx_14 extra_window_functions_14 logerrors_14 mysqlcompat_14 orafce_14
      - repmgr_14 pg_auth_mon_14 pg_auto_failover_14 pg_background_14 pg_bulkload_14 pg_catcheck_14 pg_comparator_14
      - pg_cron_14 pg_fkpart_14 pg_jobmon_14 pg_partman_14 pg_permissions_14 pg_prioritize_14 pgagent_14
      - pgaudit16_14 pgauditlogtofile_14 pgcryptokey_14 pgexportdoc_14 pgfincore_14 pgimportdoc_14 powa_14 pgmp_14 pgq_14
      - pgquarrel-0.7.0-1 pgsql_tweaks_14 pgtap_14 pgtt_14 postgresql-unit_14 postgresql_anonymizer_14 postgresql_faker_14
      - safeupdate_14 semver_14 set_user_14 sslutils_14 table_version_14 # pgrouting_14 osm2pgrouting_14
      - clang coreutils diffutils rpm-build rpm-devel rpmlint rpmdevtools bison flex # gcc gcc-c++                      # - build utils - #
      - docker-ce docker-compose kubelet kubectl kubeadm kubernetes-cni helm                                            # - cloud native- #

    repo_url_packages:               # extra packages from url
      - https://github.com/cybertec-postgresql/vip-manager/releases/download/v1.0.1/vip-manager_1.0.1-1_amd64.rpm
      - https://github.com/Vonng/pg_exporter/releases/download/v0.4.1/pg_exporter-0.4.1-1.el7.x86_64.rpm
      - https://github.com/Vonng/pigsty-pkg/releases/download/haproxy/haproxy-2.5.5-1.el7.x86_64.rpm
      - https://github.com/Vonng/loki-rpm/releases/download/v2.4.2/loki-2.4.2-1.el7.x86_64.rpm
      - https://github.com/Vonng/loki-rpm/releases/download/v2.4.2/promtail-2.4.2-1.el7.x86_64.rpm
      - https://github.com/Vonng/pigsty-pkg/releases/download/postgrest/postgrest-9.0.0-1.el7.x86_64.rpm
      - https://github.com/Vonng/pigsty-pkg/releases/download/misc/polysh-0.4-1.noarch.rpm
      - https://github.com/dalibo/pev2/releases/download/v0.24.0/pev2.tar.gz
      - https://github.com/sosedoff/pgweb/releases/download/v0.11.10/pgweb_linux_amd64.zip
      - https://github.com/Vonng/pigsty-pkg/releases/download/misc/redis-6.2.6-1.el7.remi.x86_64.rpm

    #-----------------------------------------------------------------
    # CA
    #-----------------------------------------------------------------
    ca_method: create                # create|copy|recreate
    ca_subject: "/CN=root-ca"        # self-signed CA subject
    ca_homedir: /ca                  # ca cert directory
    ca_cert: ca.crt                  # ca public key/cert
    ca_key: ca.key                   # ca private key

    #-----------------------------------------------------------------
    # NGINX
    #-----------------------------------------------------------------
    nginx_upstream:                  # domain names and upstream servers
      - { name: home,         domain: pigsty,     endpoint: "10.10.10.10:80" }
      - { name: grafana,      domain: g.pigsty,   endpoint: "10.10.10.10:3000" }
      - { name: loki,         domain: l.pigsty,   endpoint: "10.10.10.10:3100" }
      - { name: prometheus,   domain: p.pigsty,   endpoint: "10.10.10.10:9090" }
      - { name: alertmanager, domain: a.pigsty,   endpoint: "10.10.10.10:9093" }
      - { name: consul,       domain: c.pigsty,   endpoint: "127.0.0.1:8500" }
      - { name: pgweb,        domain: cli.pigsty, endpoint: "127.0.0.1:8081" }
      - { name: jupyter,      domain: lab.pigsty, endpoint: "127.0.0.1:8888" }
    app_list:                        # application nav links on home page
      - { name: Explain  , url : '/pev2'        , comment: 'postgres explain visualizer' }
      - { name: Package  , url : '/pigsty'      , comment: 'local yum repo packages'     }
      - { name: YumRepo  , url : '/pigsty.repo' , comment: 'local yum repo file'         }
      - { name: PGLogs   , url : '/logs'        , comment: 'postgres raw csv logs'       }
      - { name: Schemas  , url : '/schema'      , comment: 'schemaspy summary report'    }
      - { name: Reports  , url : '/report'      , comment: 'pgbadger summary report'     }

    docs_enabled: true              # setup local document under nginx?
    pev2_enabled: true              # setup pev2 query visualizer under nginx?
    pgbadger_enabled: true          # setup pgbadger under nginx?

    #-----------------------------------------------------------------
    # NAMESERVER
    #-----------------------------------------------------------------
    dns_records:                    # dynamic dns record resolved by dnsmasq
      - 10.10.10.2  pg-meta         # sandbox vip for pg-meta
      - 10.10.10.3  pg-test         # sandbox vip for pg-test
      - 10.10.10.10 meta-1          # sandbox node meta-1
      - 10.10.10.11 node-1          # sandbox node node-1
      - 10.10.10.12 node-2          # sandbox node node-2
      - 10.10.10.13 node-3          # sandbox node node-3
      - 10.10.10.10 pg-meta-1       # sandbox instance pg-meta-1
      - 10.10.10.11 pg-test-1       # sandbox instance node-1
      - 10.10.10.12 pg-test-2       # sandbox instance node-2
      - 10.10.10.13 pg-test-3       # sandbox instance node-3

    #-----------------------------------------------------------------
    # PROMETHEUS
    #-----------------------------------------------------------------
    prometheus_data_dir: /data/prometheus/data
    prometheus_options: '--storage.tsdb.retention=15d --enable-feature=promql-negative-offset'
    prometheus_reload: false        # reload prometheus instead of recreate it?
    prometheus_sd_method: static    # service discovery method: static|consul
    prometheus_scrape_interval: 5s # global scrape & evaluation interval
    prometheus_scrape_timeout: 4s   # scrape timeout
    prometheus_sd_interval: 5s     # service discovery refresh interval

    #-----------------------------------------------------------------
    # EXPORTER
    #-----------------------------------------------------------------
    exporter_install: none           # none|yum|binary, none by default
    exporter_repo_url: ''            # if set, repo will be added to /etc/yum.repos.d/ before yum installation
    exporter_metrics_path: /metrics  # default metric path for pg related exporter

    #-----------------------------------------------------------------
    # GRAFANA
    #-----------------------------------------------------------------
    grafana_endpoint: http://10.10.10.10:3000     # grafana endpoint url
    grafana_admin_username: admin   # default grafana admin username
    grafana_admin_password: pigsty  # default grafana admin password
    grafana_database: sqlite3       # default grafana database type: sqlite3|postgres
    grafana_pgurl: postgres://dbuser_grafana:DBUser.Grafana@meta:5436/grafana
    grafana_plugin: install         # none|install, none will skip plugin installation
    grafana_cache: /www/pigsty/plugins.tgz # path to grafana plugins cache tarball
    grafana_plugins:                # plugins that will be downloaded via grafana-cli
      - marcusolsson-csv-datasource
      - marcusolsson-json-datasource
      - marcusolsson-treemap-panel
    grafana_git_plugins:            # plugins that will be downloaded via git
      - https://github.com/Vonng/vonng-echarts-panel

    #-----------------------------------------------------------------
    # LOKI
    #-----------------------------------------------------------------
    loki_endpoint: http://10.10.10.10:3100/loki/api/v1/push # where to push data
    loki_clean: false               # whether remove existing loki data
    loki_options: '-config.file=/etc/loki.yml -config.expand-env=true'
    loki_data_dir: /data/loki       # default loki data dir
    loki_retention: 15d             # log retention period

    #-----------------------------------------------------------------
    # DCS
    #-----------------------------------------------------------------
    dcs_servers:                     # dcs server dict in name:ip format
      pg-meta-1: 10.10.10.10         # using existing external dcs cluster is recommended for HA
      # pg-meta-2: 10.10.10.11       # node with ip in dcs_servers will be initialized as dcs servers
      # pg-meta-3: 10.10.10.12       # it's recommend to reuse meta nodes as dcs servers if no ad hoc cluster available

    dcs_registry: consul         # where to register services: none | consul | etcd | both
    dcs_type: consul                 # consul | etcd | both
    consul_name: pigsty                 # consul dc name | etcd initial cluster token
    consul_clean: clean         # abort|skip|clean if dcs server already exists (FOR DEMO ONLY!)
    consul_safeguard: false         # set to true to disable purge functionality for good (force consul_clean = abort)
    consul_data_dir: /data/consul    # consul data dir (/var/lib/consul by default)
    etcd_data_dir: /data/etcd        # etcd data dir (/var/lib/consul by default)


    #================================================================#
    #                         VARS: NODES                            #
    #================================================================#
    # global variables for nodes (including meta)

    #-----------------------------------------------------------------
    # NODE_IDENTITY
    #-----------------------------------------------------------------
    meta_node: false                # node with meta_node flag will be marked as admin node
    # nodename:                     # [OPTIONAL] node instance's identity, used as `ins`
    node_cluster: nodes             # [OPTIONAL] node cluster identity, 'nodes' by default, used as `cls`
    nodename_overwrite: true        # use node's nodename as hostname?
    nodename_exchange: false        # exchange hostname among play hosts?

    #-----------------------------------------------------------------
    # NODE_DNS
    #-----------------------------------------------------------------
    node_etc_hosts_default:                 # static dns records in /etc/hosts
      - 10.10.10.10 meta pigsty c.pigsty g.pigsty l.pigsty p.pigsty a.pigsty cli.pigsty lab.pigsty api.pigsty
    node_etc_hosts: []        # extra static dns records in /etc/hosts
    node_dns_method: add            # add (default) | none (skip) | overwrite (remove old settings)
    node_dns_servers:               # dynamic nameserver in /etc/resolv.conf
      - 10.10.10.10
    node_dns_options:               # dns resolv options
      - options single-request-reopen timeout:1 rotate
      - domain service.consul

    #-----------------------------------------------------------------
    # NODE_REPO
    #-----------------------------------------------------------------
    node_repo_method: local         # none|local|public
    node_repo_remove: true          # remove existing repo on nodes?
    node_local_repo_url:            # list local repo url, if node_repo_method = local
      - http://pigsty/pigsty.repo

    #-----------------------------------------------------------------
    # NODE_PACKAGES
    #-----------------------------------------------------------------
    node_packages_default:                  # common packages for all nodes
      - wget,sshpass,ntp,chrony,tuned,uuid,lz4,make,patch,bash,lsof,wget,unzip,git,ftp,vim-minimal,ca-certificates
      - numactl,grubby,sysstat,dstat,iotop,bind-utils,net-tools,tcpdump,socat,ipvsadm,telnet,tuned,nc,pv,jq,perf
      - readline,zlib,openssl,openssl-libs,openssh-clients,python3,python36-requests,node_exporter,consul,etcd,promtail
    node_packages: [ ]        # extra packages for all nodes
    node_packages_meta:             # extra packages for meta nodes
      - grafana,prometheus2,alertmanager,loki,nginx_exporter,blackbox_exporter,pushgateway,redis,postgresql14
      - nginx,ansible,pgbadger,python-psycopg2,dnsmasq,coreutils,diffutils,polysh,docker-ce,docker-compose
    node_packages_meta_pip: jupyterlab  # extra pip packages to be installed on meta nodes

    #-----------------------------------------------------------------
    # NODE_FEATURES
    #-----------------------------------------------------------------
    node_disable_numa: false        # disable numa, reboot required
    node_disable_swap: false        # disable swap, use with caution
    node_disable_firewall: true     # disable firewall
    node_disable_selinux: true      # disable selinux
    node_static_network: true       # keep dns resolver settings after reboot
    node_disk_prefetch: false       # setup disk prefetch on HDD to increase performance

    #-----------------------------------------------------------------
    # NODE_MODULES
    #-----------------------------------------------------------------
    node_feature_kernel: [softdog, br_netfilter, ip_vs, ip_vs_rr, ip_vs_rr, ip_vs_wrr, ip_vs_sh]

    #-----------------------------------------------------------------
    # NODE_TUNE
    #-----------------------------------------------------------------
    node_tune: tiny                 # install and activate tuned profile: none|oltp|olap|crit|tiny
    node_tune_sysctl: { }         # set additional sysctl parameters, k:v format

    #-----------------------------------------------------------------
    # NODE_ADMIN
    #-----------------------------------------------------------------
    node_admin_enabled: true           # create a default admin user defined by `node_admin_*` ?
    node_admin_uid: 88               # uid and gid for this admin user
    node_admin_username: dba         # name of this admin user, dba by default
    node_admin_ssh_exchange: true    # exchange admin ssh key among each pgsql cluster ?
    node_admin_pk_current: true      # add current user's ~/.ssh/id_rsa.pub to admin authorized_keys ?
    node_admin_pk_list:                  # ssh public keys to be added to admin user (REPLACE WITH YOURS!)
      - 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAAAgQC7IMAMNavYtWwzAJajKqwdn3ar5BhvcwCnBTxxEkXhGlCO2vfgosSAQMEflfgvkiI5nM1HIFQ8KINlx1XLO7SdL5KdInG5LIJjAFh0pujS4kNCT9a5IGvSq1BrzGqhbEcwWYdju1ZPYBcJm/MG+JD0dYCh8vfrYB/cYMD0SOmNkQ== vagrant@pigsty.com'

    #-----------------------------------------------------------------
    # NODE_TIME
    #-----------------------------------------------------------------
    node_timezone: Asia/Hong_Kong    # default node timezone, empty will not change
    node_ntp_enabled: true            # config ntp service? false will leave it with system default
    node_ntp_service: ntp            # ntp service provider: ntp|chrony
    node_ntp_servers:                # default NTP servers
      - pool cn.pool.ntp.org iburst
      - pool pool.ntp.org iburst
      - pool time.pool.aliyun.com iburst
      - server 10.10.10.10 iburst
      - server ntp.tuna.tsinghua.edu.cn iburst

    #-----------------------------------------------------------------
    # NODE_EXPORTER
    #-----------------------------------------------------------------
    node_exporter_enabled: true      # setup node_exporter on instance
    node_exporter_port: 9100         # default port for node exporter
    node_exporter_options: '--no-collector.softnet --no-collector.nvme --collector.ntp --collector.tcpstat --collector.processes'

    #-----------------------------------------------------------------
    # PROMTAIL
    #-----------------------------------------------------------------
    promtail_enabled: true           # enable promtail logging collector?
    promtail_clean: false            # remove promtail status file? false by default
    promtail_port: 9080              # default listen address for promtail
    promtail_options: '-config.file=/etc/promtail.yml -config.expand-env=true'
    promtail_positions: /var/log/positions.yaml   # position status for promtail


    #================================================================#
    #                         VARS: REDIS                            #
    #================================================================#
    # REDIS are not enabled by default

    #-----------------------------------------------------------------
    # REDIS_IDENTITY
    #-----------------------------------------------------------------
    #redis_cluster: redis-test       # name of this redis cluster @ cluster level
    #redis_node: 1                   # redis node identifier, integer sequence @ node level
    #redis_instances: {}             # redis instances definition of this redis node @ node level

    #-----------------------------------------------------------------
    # REDIS_PROVISION
    #-----------------------------------------------------------------
    redis_install: yum              # none|yum|binary, yum by default (install from yum repo)
    redis_mode: standalone          # standalone,cluster,sentinel
    redis_conf: redis.conf          # config template path (except sentinel)
    redis_fs_main: /data            # main fs mountpoint for redis data
    redis_bind_address: '0.0.0.0'   # bind address, empty string turns to inventory_hostname
    redis_exists_action: clean      # abort|skip|clean if redis server already exists
    redis_disable_purge: false      # force redis_exists_action = abort if true
    redis_max_memory: 1GB           # max memory used by each redis instance
    redis_mem_policy: allkeys-lru   # memory eviction policy
    redis_password: ''              # masterauth & requirepass password, disable by empty string
    redis_rdb_save: ['1200 1']      # redis rdb save directives, disable with empty list
    redis_aof_enabled: false        # redis aof enabled
    redis_rename_commands: {}       # rename dangerous commands
    redis_cluster_replicas: 1       # how many replicas for a master in redis cluster ?

    #-----------------------------------------------------------------
    # REDIS_EXPORTER
    #-----------------------------------------------------------------
    redis_exporter_enabled: true    # install redis exporter on redis nodes ?
    redis_exporter_port: 9121       # default port for redis exporter
    redis_exporter_options: ''      # default cli args for redis exporter


...