---
######################################################################
# File      :   pigsty-sec.yml
# Desc      :   Pigsty security enhancement configuration
# Link      :   https://github.com/Vonng/pigsty/wiki/Configuration
# Ctime     :   2020-05-22
# Mtime     :   2022-11-16
# License   :   AGPLv3
# Copyright (C) 2018-2022 Ruohang Feng (rh@vonng.com)
######################################################################

# SECURITY ENHANCEMENT MODE
#   * 3 node autonomous cluster with one delayed instance example
#   * use crit templates, no data loss, checksum force enabled
#   * use at least 3 dcs nodes, and enable ssl for etcd & consul
#   * use ssl on postgres & pgbouncer, sslmode=require
#   * use scram-sha-256 instead of md5 password encryption
#   * use a l2 vip for pgsql cluster

all:

  children:

    infra: # infra cluster for proxy, monitor, alert, etc
      hosts: # 1 for common usage, 3 nodes for production
        10.10.10.10: { infra_seq: 1 } # identity required
        10.10.10.11: { infra_seq: 2, nginx_enabled: false }
        10.10.10.12: { infra_seq: 3, nginx_enabled: false }
      vars:
        patroni_watchdog_mode: off

    etcd: # dcs service for postgres/patroni ha consensus
      hosts:  # 1 node for testing, 3 or 5 for production
        10.10.10.10: { etcd_seq: 1 }  # etcd_seq required
        10.10.10.11: { etcd_seq: 2 }  # assign from 1 ~ n
        10.10.10.12: { etcd_seq: 3 }  # odd number please
      vars: # cluster level parameter override roles/etcd
        etcd_cluster: etcd  # mark etcd cluster name etcd
        etcd_safeguard: false # safeguard against purging
        etcd_clean: true # purge etcd during init process

    pg-meta:                          # 3 instance postgres cluster `pg-meta`
      hosts:
        10.10.10.10: { pg_seq: 1, pg_role: primary }
        10.10.10.11: { pg_seq: 2, pg_role: replica }
        10.10.10.12: { pg_seq: 3, pg_role: replica , pg_offline_query: true }
      vars:
        pg_cluster: pg-meta
        pg_conf: crit.yml
        pg_users:
          - { name: dbuser_meta , password: DBUser.Meta   , pgbouncer: true , roles: [ dbrole_admin ] , comment: pigsty admin user }
          - { name: dbuser_view , password: DBUser.Viewer , pgbouncer: true , roles: [ dbrole_readonly ] , comment: read-only viewer for meta database }
        pg_databases:
          - { name: meta , baseline: cmdb.sql ,comment: pigsty meta database , schemas: [ pigsty ] , extensions: [{ name: postgis, schema: public }] }
        pg_services:                  # extra services in addition to pg_services_default, array of service definition
          - name: standby             # required, service name, the actual svc name will be prefixed with `pg_cluster`, e.g: pg-meta-standby
            src_ip: "*"               # required, service bind ip address, `*` for all ip, `vip` for cluster `vip_address`
            src_port: 5435            # required, service exposed port (work as kubernetes service node port mode)
            dst_port: pgbouncer       # optional, destination port, postgres|pgbouncer|<port_number>   , pgbouncer(6432) by default
            check_method: http        # optional, health check method: http is the only available method for now
            check_port: patroni       # optional, health check port: patroni|pg_exporter|<port_number> , patroni(8008) by default
            check_url: /sync          # optional, health check url path, /read-only?lag=0 by default
            check_code: 200           # optional, health check expected http code, 200 by default
            selector: "[]"            # required, JMESPath to filter inventory ()
            selector_backup: "[? pg_role == `primary`]"  # primary used as backup server for standby service (will not work because /sync for )
            haproxy:                  # optional, adhoc parameters for haproxy service provider (vip_l4 is another service provider)
              maxconn: 3000           # optional, max allowed front-end connection
              balance: roundrobin     # optional, haproxy load balance algorithm (roundrobin by default, other: leastconn)
              default_server_options: 'inter 3s fastinter 1s downinter 5s rise 3 fall 3 on-marked-down shutdown-sessions slowstart 30s maxconn 3000 maxqueue 128 weight 100'
        vip_mode: l2
        vip_address: 10.10.10.2
        vip_cidrmask: 8
        vip_interface: eth1

    # OPTIONAL delayed cluster for pg-meta
    pg-meta-delay:                    # delayed instance for pg-meta (1 hour ago)
      hosts:
        10.10.10.13: { pg_seq: 1, pg_role: primary, pg_upstream: 10.10.10.10, pg_delay: 1h }
      vars:
        pg_cluster: pg-meta-delay


  ####################################################################
  #                          Parameters                              #
  ####################################################################
  vars:                               # global variables
    version: v2.0.0-a1                # pigsty version string
    admin_ip: 10.10.10.10             # admin node ip address
    region: default                   # upstream mirror region: default|china|europe
    pg_pwd_enc: scram-sha-256         # algorithm for encrypting passwords: md5|scram-sha-256
    pg_sslmode: require               # enable sslmode: disable|allow|prefer|require|verify-ca|verify-full
    haproxy_auth_enabled: false       # enable authentication for haproxy admin?

    # WARNING: CHANGE THESE PASSWORDS
    #grafana_admin_username: admin
    grafana_admin_password: pigsty
    #pg_admin_username: dbuser_dba
    pg_admin_password: DBUser.DBA
    #pg_monitor_username: dbuser_monitor
    pg_monitor_password: DBUser.Monitor
    #pg_replication_username: replicator
    pg_replication_password: DBUser.Replicator
    #patroni_username: postgres
    patroni_password: Patroni.API
    #haproxy_admin_username: admin
    haproxy_admin_password: pigsty

    pg_hba_rules:                     # postgres host-based authentication rules
      - title: allow meta node password access
        role: common
        rules:
          - host    all     all                         10.10.10.10/32      scram-sha-256
      - title: allow intranet admin password access
        role: common
        rules:
          - host    all     +dbrole_admin               10.0.0.0/8          scram-sha-256
          - host    all     +dbrole_admin               172.16.0.0/12       scram-sha-256
          - host    all     +dbrole_admin               192.168.0.0/16      scram-sha-256
      - title: allow intranet password access
        role: common
        rules:
          - host    all             all                 10.0.0.0/8          scram-sha-256
          - host    all             all                 172.16.0.0/12       scram-sha-256
          - host    all             all                 192.168.0.0/16      scram-sha-256
      - title: allow local read/write (local production user via pgbouncer)
        role: common
        rules:
          - local   all     +dbrole_readonly                                scram-sha-256
          - host    all     +dbrole_readonly           127.0.0.1/32         scram-sha-256
      - title: allow offline query (ETL,SAGA,Interactive) on offline instance
        role: offline
        rules:
          - host    all     +dbrole_offline               10.0.0.0/8        scram-sha-256
          - host    all     +dbrole_offline               172.16.0.0/12     scram-sha-256
          - host    all     +dbrole_offline               192.168.0.0/16    scram-sha-256

    pgbouncer_hba_rules:              # pgbouncer host-based authentication rules
      - title: local password access
        role: common
        rules:
          - local  all          all                                     scram-sha-256
          - host   all          all                     127.0.0.1/32    scram-sha-256
      - title: intranet password access
        role: common
        rules:
          - host   all          all                     10.0.0.0/8      scram-sha-256
          - host   all          all                     172.16.0.0/12   scram-sha-256
          - host   all          all                     192.168.0.0/16  scram-sha-256


...