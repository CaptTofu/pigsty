---
######################################################################
# File      :   pigsty-citus.yml
# Desc      :   citus 1 coordinator & 3 data node example config
# Link      :   https://github.com/Vonng/pigsty/wiki/Configuration
# Ctime     :   2020-05-22
# Mtime     :   2022-11-14
# License   :   AGPLv3
# Copyright (C) 2018-2022 Ruohang Feng (rh@vonng.com)
######################################################################

all:
  children:

    # special group: meta nodes
    meta:
      hosts: { 10.10.10.10: { } }
      vars:
        meta_node: true               # mark this group as meta nodes
        ansible_group_priority: 99    # overwrite other group parameters
        patroni_watchdog_mode: off    # do not fencing meta nodes

    # etcd cluster for ha postgres
    etcd: { hosts: {10.10.10.10: {etcd_seq: 1}}, vars: {etcd_cluster: etcd}}

    # citus coordinator node
    pg-meta:
      hosts:
        10.10.10.10: { pg_seq: 1, pg_role: primary , pg_offline_query: true }
      vars:
        pg_cluster: pg-meta
        pg_users: [{ name: citus ,password: citus ,pgbouncer: true ,roles: [dbrole_admin]}]
        pg_databases:
          - { name: meta ,schemas: [pigsty] ,extensions: [{name: postgis, schema: public},{ name: citus}] ,baseline: cmdb.sql ,comment: pigsty meta database}

    # citus data node 1,2,3
    pg-node1:
      hosts:
        10.10.10.11: { pg_seq: 1, pg_role: primary }
      vars:
        pg_cluster: pg-node1
        vip_address: 10.10.10.3
        pg_users: [{ name: citus ,password: citus ,pgbouncer: true ,roles: [dbrole_admin]}]
        pg_databases: [{ name: meta ,owner: citus , extensions: [{name: citus},{name: postgis, schema: public}]}]

    pg-node2:
      hosts:
        10.10.10.12: { pg_seq: 1, pg_role: primary  , pg_offline_query: true }
      vars:
        pg_cluster: pg-node2
        vip_address: 10.10.10.4
        pg_users: [ { name: citus , password: citus , pgbouncer: true , roles: [ dbrole_admin ] } ]
        pg_databases: [ { name: meta , owner: citus , extensions: [ { name: citus }, { name: postgis, schema: public } ] } ]

    pg-node3:
      hosts:
        10.10.10.13: { pg_seq: 1, pg_role: primary  , pg_offline_query: true }
      vars:
        pg_cluster: pg-node3
        vip_address: 10.10.10.5
        pg_users: [ { name: citus , password: citus , pgbouncer: true , roles: [ dbrole_admin ] } ]
        pg_databases: [ { name: meta , owner: citus , extensions: [ { name: citus }, { name: postgis, schema: public } ] } ]


  vars:                               # global variables
    version: v2.0.0-a1                # pigsty version string
    admin_ip: 10.10.10.10             # admin node ip address
    region: default                   # upstream mirror region: default|china|europe
    node_etc_hosts:                   # write static etc hosts to citus cluster
      - 10.10.10.11 node-1 pg-node1-1
      - 10.10.10.12 node-2 pg-node2-1
      - 10.10.10.13 node-3 pg-node3-1
    pg_libs: 'citus, pg_stat_statements, auto_explain'  # extensions to be loaded
    pg_hba_rules_extra:               # extra hba rules to allow intranet citus trust access
      # AD HOC FOR CITUS CLUSTER
      - title: Allow unrestricted access to nodes in the local network. The following ranges
        role: common
        rules:
          - host    all             all             10.0.0.0/8              trust

      - title: Also allow the host unrestricted access to connect to itself
        role: common
        rules:
          - host    all             all             127.0.0.1/32            trust
          - host    all             all             ::1/128                 trust

...