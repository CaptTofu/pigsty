---
######################################################################
# File      :   pigsty-demo.yml
# Desc      :   Pigsty Local Sandbox 4-node Demo
# Link      :   https://github.com/Vonng/pigsty/wiki/Configuration
# Ctime     :   2020-05-22
# Mtime     :   2022-11-06
# Copyright (C) 2018-2022 Ruohang Feng (rh@vonng.com)
######################################################################

all:
  children:

    meta:                             # special group: meta nodes
      hosts: { 10.10.10.10: { } }
      vars:
        meta_node: true               # mark this group as meta nodes
        ansible_group_priority: 99    # overwrite other group parameters
        patroni_watchdog_mode: off    # do not fencing meta nodes
        docker_enabled: true          # enable docker service on meta nodes

    pg-meta:
      hosts:
        10.10.10.10: { pg_seq: 1, pg_role: primary }
      vars:
        pg_cluster: pg-meta
        pg_users:
          - {name: dbuser_meta     ,password: DBUser.Meta     ,pgbouncer: true ,roles: [dbrole_admin]    ,comment: pigsty admin user }
          - {name: dbuser_view     ,password: DBUser.Viewer   ,pgbouncer: true ,roles: [dbrole_readonly] ,comment: read-only viewer for meta database }
          - {name: dbuser_grafana  ,password: DBUser.Grafana  ,pgbouncer: true ,roles: [dbrole_admin]    ,comment: admin user for grafana database    }
          - {name: dbuser_bytebase ,password: DBUser.Bytebase ,pgbouncer: true ,roles: [dbrole_admin]    ,comment: admin user for bytebase database   }
          - {name: dbuser_kong     ,password: DBUser.Kong     ,pgbouncer: true ,roles: [dbrole_admin]    ,comment: admin user for kong api gateway    }
          - {name: dbuser_gitea    ,password: DBUser.Gitea    ,pgbouncer: true ,roles: [dbrole_admin]    ,comment: admin user for gitea service       }
          - {name: dbuser_wiki     ,password: DBUser.Wiki     ,pgbouncer: true ,roles: [dbrole_admin]    ,comment: admin user for wiki.js service     }
        pg_databases:
          - { name: meta ,schemas: [pigsty] ,extensions: [{name: timescaledb},{name: postgis,schema: public}] ,baseline: cmdb.sql ,comment: pigsty meta database}
          - { name: grafana  ,owner: dbuser_grafana  ,revokeconn: true ,comment: grafana primary database }
          - { name: bytebase ,owner: dbuser_bytebase ,revokeconn: true ,comment: bytebase primary database }
          - { name: kong     ,owner: dbuser_kong     ,revokeconn: true ,comment: kong the api gateway database }
          - { name: gitea    ,owner: dbuser_gitea    ,revokeconn: true ,comment: gitea meta database }
          - { name: wiki     ,owner: dbuser_wiki     ,revokeconn: true ,comment: wiki meta database }
        pg_hba_rules_extra:
          - title: allow application database intranet access
            role: common
            rules:
              - host    kong            dbuser_kong         10.0.0.0/8          md5
              - host    bytebase        dbuser_bytebase     10.0.0.0/8          md5
              - host    grafana         dbuser_grafana      10.0.0.0/8          md5
        pg_libs: 'timescaledb, pg_stat_statements, auto_explain'  # add timescaledb extension
        vip_mode: l2                 # listen l2 vip 10.10.10.2 on eth1
        vip_address: 10.10.10.2
        vip_cidrmask: 8
        vip_interface: eth1

    # pgsql cluster: pg-test
    pg-test:
      hosts:
        10.10.10.11: { pg_seq: 1, pg_role: primary }   # primary instance, leader of cluster
        10.10.10.12: { pg_seq: 2, pg_role: replica }   # replica instance, follower of leader
        10.10.10.13: { pg_seq: 3, pg_role: replica, pg_offline_query: true } # replica with offline access
      vars:
        pg_cluster: pg-test           # define pgsql cluster name
        pg_version: 15                # test postgresql 15 with pg-test cluster
        pg_users:  [{ name: test , password: test , pgbouncer: true , roles: [ dbrole_admin ] }]
        pg_databases: [{ name: test }]
        pg_extensions: ['postgis33_${pg_version}* citus111_${pg_version} pg_repack_${pg_version} wal2json_${pg_version}']
        vip_mode: l2                  # enable/disable vip (require members in same LAN)
        vip_address: 10.10.10.3       # virtual ip address for this cluster
        vip_cidrmask: 8               # cidr network mask length
        vip_interface: eth1           # interface to add virtual ip

  vars:                               # global variables
    version: v1.6.0-b4                # pigsty version string
    meta_ip: 10.10.10.10              # primary meta node ip address
    region: default                   # upstream mirror region: default|china|europe
    pg_clean: true                    # for convenience, purge existing pg during init, DO NOT DO THIS IN PRODUCTION
    dcs_clean: true                   # for convenience, purge existing dcs during init, DO NOT DO THIS IN PRODUCTION
    dcs_servers:                      # singleton dcs server
      meta-1: 10.10.10.10
    nginx_upstream:                   # domain names and upstream servers
      - { name: home         , domain: pigsty      , endpoint: "${meta_ip}:80"   }
      - { name: grafana      , domain: g.pigsty    , endpoint: "${meta_ip}:3000" }
      - { name: loki         , domain: l.pigsty    , endpoint: "${meta_ip}:3100" }
      - { name: prometheus   , domain: p.pigsty    , endpoint: "${meta_ip}:9090" }
      - { name: alertmanager , domain: a.pigsty    , endpoint: "${meta_ip}:9093" }
      - { name: consul       , domain: c.pigsty    , endpoint: "127.0.0.1:8500"   } #== ^ required ==#
      - { name: postgrest    , domain: api.pigsty  , endpoint: "127.0.0.1:8884"   } #== v optional ==#
      - { name: pgadmin      , domain: adm.pigsty  , endpoint: "127.0.0.1:8885"   }
      - { name: pgweb        , domain: cli.pigsty  , endpoint: "127.0.0.1:8886"   }
      - { name: bytebase     , domain: ddl.pigsty  , endpoint: "127.0.0.1:8887"   }
      - { name: jupyter      , domain: lab.pigsty  , endpoint: "127.0.0.1:8888"   }
      - { name: gitea        , domain: git.pigsty  , endpoint: "127.0.0.1:8889"   }
      - { name: minio        , domain: sss.pigsty  , endpoint: "127.0.0.1:9000"   }
      - { name: wiki         , domain: wiki.pigsty , endpoint: "127.0.0.1:9002"   }
    nginx_indexes:                    # application nav links on home page
      - { name: PgAdmin4   , url : 'http://adm.pigsty'  , comment: 'PgAdmin4 for PostgreSQL'  }
      - { name: PGWeb      , url : 'http://cli.pigsty'  , comment: 'PGWEB Browser Client'     }
      - { name: ByteBase   , url : 'http://ddl.pigsty'  , comment: 'ByteBase Schema Migrator' }
      - { name: PostgREST  , url : 'http://api.pigsty'  , comment: 'Kong API Gateway'         }
      - { name: Gitea      , url : 'http://git.pigsty'  , comment: 'Gitea Git Service'        }
      - { name: Minio      , url : 'http://sss.pigsty'  , comment: 'Minio Object Storage'     }
      - { name: Wiki       , url : 'http://wiki.pigsty' , comment: 'Local Wiki Pedia'         }
      - { name: Explain    , url : '/pev.html'          , comment: 'pgsql explain visualizer' }
      - { name: Package    , url : '/pigsty'            , comment: 'local yum repo packages'  }
      - { name: Matrix Pkg , url : '/matrix'            , comment: 'matrixdb repo packages'   }
      - { name: PG Logs    , url : '/logs'              , comment: 'postgres raw csv logs'    }
      - { name: Schemas    , url : '/schema'            , comment: 'schemaspy summary report' }
      - { name: Reports    , url : '/report'            , comment: 'pgbadger summary report'  }
    node_etc_hosts:                   # extra static dns records in /etc/hosts
      - 10.10.10.2  pg-meta           # sandbox vip for pg-meta
      - 10.10.10.3  pg-test           # sandbox vip for pg-test
      - 10.10.10.10 pg-meta-1         # sandbox instance pg-meta-1
      - 10.10.10.11 pg-test-1         # sandbox instance node-1
      - 10.10.10.12 pg-test-2         # sandbox instance node-2
      - 10.10.10.13 pg-test-3         # sandbox instance node-3
    node_admin_pk_list:               # vagrant ssh public keys on admin node
      - 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAAAgQC7IMAMNavYtWwzAJajKqwdn3ar5BhvcwCnBTxxEkXhGlCO2vfgosSAQMEflfgvkiI5nM1HIFQ8KINlx1XLO7SdL5KdInG5LIJjAFh0pujS4kNCT9a5IGvSq1BrzGqhbEcwWYdju1ZPYBcJm/MG+JD0dYCh8vfrYB/cYMD0SOmNkQ== vagrant@pigsty.com'
    node_timezone: Asia/Hong_Kong     # default node timezone, empty will not change
    node_ntp_servers:                 # NTP servers in /etc/chrony.conf
      - pool cn.pool.ntp.org iburst
      - pool pool.ntp.org iburst
      - pool time.pool.aliyun.com iburst
    pg_dcs_type: etcd                 # which dcs to use: consul or etcd or raft
    docker_registry_mirrors: ["https://registry.cn-hangzhou.aliyuncs.com"]
...