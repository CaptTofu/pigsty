#!/usr/bin/env ansible-playbook
---
#==============================================================#
# File      :   initdb-pgbouncer.yml
# Mtime     :   2020-05-31
# Desc      :   install and configure pgbouncer
# Path      :   ansible/init-pgbouncer.yml
# Author    :   Vonng(fengruohang@outlook.com)
# Note: This play assumes infra is already inited
#==============================================================#


- name: Init Pgbouncer
  become: yes
  gather_facts: false
  any_errors_fatal: true
  vars:
  hosts: all
  tasks:

    ################################################################
    # PHASE 0: [check] precondition
    ################################################################
    - name: Check pgbouncer installed
      tags: [check_pgbouncer]
      shell: "[[ -f /bin/pgbouncer ]]"

    - set_fact:
        repl_user={{ repl_user | default('replicator') }}
        repl_pass={{ repl_pass | default('replicator') }}
        mon_user={{ mon_user | default('dbuser_monitor') }}
        mon_pass={{ mon_pass | default('dbuser_monitor') }}
        biz_user={{ biz_user | default(cluster) }}
        biz_pass={{ biz_pass | default(cluster) }}
        biz_db={{ biz_db | default(cluster) }}


    ################################################################
    # PHASE 1: [clean] existing pgbouncer
    ################################################################
    - name: Cleanup pgbouncer
      tags: [clean_pgbouncer]
      block:
        - name: Stop running pgbouncer service
          ignore_errors: true
          systemd: name=pgbouncer state=stopped enabled=no daemon_reload=yes

        - name: Remove existing pgbouncer directories
          file: path={{ item }} state=absent
          with_items:
            - /etc/pgbouncer
            - /var/log/pgbouncer
            - /var/run/pgbouncer

        - name: Recreate pgbouncer directories with user postgres
          file: path={{ item }} state=directory owner=postgres group=postgres mode=0700
          with_items:
            - /etc/pgbouncer
            - /var/log/pgbouncer
            - /var/run/pgbouncer


    ################################################################
    # PHASE 2: [config] pgbouncer
    ################################################################
    - name: Config pgbouncer
      tags: [config_pgbouncer]
      block:
        - name: Copy pgbouncer.ini
          template: src=templates/pgbouncer/pgbouncer.ini dest=/etc/pgbouncer/pgbouncer.ini owner=postgres group=postgres mode=0600
        - name: Copy pgb_hba.conf
          template: src=templates/pgbouncer/pgb_hba.conf dest=/etc/pgbouncer/pgb_hba.conf owner=postgres group=postgres mode=0600

        # equiv: psql -Atq -U postgres -d postgres -c "SELECT concat('\"', usename, '\" \"', passwd, '\"') FROM pg_shadow WHERE NOT (NOT usesuper AND userepl)" > /etc/pgbouncer/userlist.txt
        - name: Generate userlist.txt
          become_user: postgres
          shell: |
            md5_mon_pass="md5$(echo -n '{{ mon_pass }}{{ mon_user }}' | md5sum | awk '{print $1}')"
            md5_biz_pass="md5$(echo -n '{{ biz_pass }}{{ biz_user }}' | md5sum | awk '{print $1}')"
            echo '"postgres" ""' > /etc/pgbouncer/userlist.txt
            echo \"{{ mon_user }}\" \"${md5_mon_pass}\" >> /etc/pgbouncer/userlist.txt
            echo \"{{ biz_user }}\" \"${md5_biz_pass}\" >> /etc/pgbouncer/userlist.txt
            chmod 0600 /etc/pgbouncer/userlist.txt
            chown -R postgres:postgres /var/run/pgbouncer /var/log/pgbouncer /etc/pgbouncer

        # systemd services
        - name: Generate pgbouncer systemd definition
          copy:
            content: |
              [Unit]
              Description=A lightweight connection pooler for PostgreSQL
              After=syslog.target
              After=network.target

              [Service]
              Type=simple
              User=postgres
              Group=postgres
              Environment=BOUNCERCONF=/etc/pgbouncer/pgbouncer.ini
              PIDFile=/var/run/pgbouncer/pgbouncer.pid
              ExecStart=/usr/bin/pgbouncer ${BOUNCERCONF}
              ExecReload=/usr/bin/kill -HUP $MAINPID
              KillSignal=SIGINT
              TimeoutSec=300

              [Install]
              WantedBy=multi-user.target
            dest: /etc/systemd/system/pgbouncer.service
            owner: root
            group: root
            mode: 0644

    ################################################################
    # PHASE 3: [launch] pgbouncer service
    ################################################################
    - name: Launch pgbouncer
      tags: [launch_pgbouncer]
      block:
        - name: Launch pgbouncer service
          systemd: name=pgbouncer state=restarted enabled=yes daemon_reload=yes

        - name: Waits pgbouncer listen on port
          wait_for: host=localhost port=6432 state=started timeout=10

        - name: Check pgbouncer is ready
          become_user: postgres
          command: /usr/pgsql/bin/pg_isready -p6432

        - name: Check pgbouncer bizdb accessibility
          become_user: postgres
          command: psql -p6432 "postgres://{{ biz_user | default(cluster) }}:{{ biz_pass | default(cluster) }}@localhost:6432/{{ biz_db | default(cluster) }}" -Atc 'SELECT 1;'


