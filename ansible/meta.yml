#!/usr/bin/env ansible-playbook
---
#==============================================================#
# Init dcs/k8s on all nodes
#==============================================================#
- name: Init DCS/K8S
  become: yes
  hosts: all
  tags: consul
  gather_facts: true
  vars:
    consul_server: [10.10.10.10]     # list your consul server address here
  roles:
    - role: consul                   # setup consul environment


#==============================================================#
# Install meta node infrastructure
#==============================================================#
- name: Init Meta
  become: yes
  hosts: meta
  tags: meta
  gather_facts: true
  vars:
    proxy_env: {}
    additional_package_list: []
    grafana_provision_datasources: true
    grafana_provision_dashboards: true
    grafana_provision_plugins: true
    grafana_force_download_plugins: false

    # metadb setup
    cluster: pg-meta                      # [REQUIRED] parameter `cluster`
    version: 12                           # [REQUIRED] parameter `version`
    force: true                           # force removing existing cluster

    # default_creation:   false           # create default business database and user? (optional)
    default_username: 'dbuser_meta'       # business passowrd (optional)
    default_password: 'meta'              # business passowrd (optional), may provide via secret files
    default_database: 'meta'              # business username (optional)

    node_exporter_port: 9100              # node exporter port
    pg_exporter_port: 9630                # pg exporter port
    pgbouncer_exporter_port: 9631         # pgbouncer exporter port
    pg_exporter_metric_path: "/metrics"   # node & pg & pgbouncer exporter port

    # lb_enabled: true                    # enable/disable haproxy load balancer
    lb_primary_port: 5555                 # default port for primary service
    lb_replica_port: 5556                 # default port for replica service

  roles:
    - role: meta                          # init meta service: nginx, dnsmasq, prometheus, grafana, etc...

    - role: pg_precheck                   # check cluster topo and build primary & replica group
    - role: pg_install                    # install postgres packages, create users and dir
    - role: pg_primary                    # init primary instance
    - role: pg_pgbouncer                  # init connection pool
    - role: pg_patroni                    # init ha agent patroni
    - role: pg_monitor                    # init monitoring system

