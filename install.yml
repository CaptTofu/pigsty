#!/usr/bin/env ansible-playbook
---
#==============================================================#
# File      :   install.yml
# Ctime     :   2021-01-19
# Mtime     :   2022-10-18
# Desc      :   install everything on all nodes
# Path      :   install.yml
# Copyright (C) 2018-2022 Ruohang Feng (rh@vonng.com)
#==============================================================#

#---------------------------------------------------------------
# Notice
#---------------------------------------------------------------
# This is a special playbook that interleave infra.yml & pgsql.yml
# It is used for 4-node demo, or in case that there are multiple
# meta nodes also reused as common database nodes.
#
# to init multiple meta nodes, add their ip address to pigsty.yml
#   all.children.meta.hosts
#
# if offline installation packages is used, you can also copy them to
#   copy /www/pigsty to all meta nodes before run ./install.yml
#---------------------------------------------------------------

#---------------------------------------------------------------
# setup meta node identity
#---------------------------------------------------------------
- name: Identity
  hosts: all
  gather_facts: no
  tags: id
  roles:

    - role: node_id             # get node identity (always)
      tags: node-id

    - role: pg_id               # get pgsql identity (always)
      tags: pg-id
      when: pg_cluster is defined

#---------------------------------------------------------------
# bootstrap meta node with local yum repo
#---------------------------------------------------------------
- name: Infra Bootstrap
  become: yes
  hosts: meta
  gather_facts: no
  tags: infra-boot
  roles:

    - role: environ             # setup environment on meta nodes
      tags: environ

    - role: repo                # setup local yum repo on meta nodes
      tags: repo                # you can disable repo on extra meta nodes with nginx_enabled: false
      when: nginx_enabled|bool


#---------------------------------------------------------------
# init node & dcs
#---------------------------------------------------------------
- name: Node Init
  become: yes
  hosts: all
  gather_facts: no
  tags: node-init
  roles:

    - role: node            # init meta node itself
      tags: node

    - role: ca              # init ca-infra & dist to nodes
      tags: ca

    - role: docker          # init docker if enabled
      tags: docker
      when: docker_enabled|bool

    - role: consul          # init consul if enabled
      tags: [ dcs, consul ]
      when: consul_enabled|bool

    - role: etcd            # init etcd if enabled
      tags: [ dcs, etcd ]
      when: etcd_enabled|bool


#---------------------------------------------------------------
# init infrastructure on meta nodes
#---------------------------------------------------------------
- name: Setup Infrastructure on meta nodes
  become: yes
  hosts: meta
  gather_facts: no
  tags: infra
  roles:

    - role: nameserver    # init dns nameserver
      tags: nameserver
      # when: nameserver_enabled|bool

    - role: nginx           # init nginx
      tags: nginx
      # when: nginx_enabled|bool

    - role: prometheus      # init prometheus
      tags: prometheus
      # when: prometheus_enabled|bool

    - role: grafana         # init grafana
      tags: grafana
      # when: grafana_enabled|bool

    - role: loki            # init loki
      tags: loki
      # when: loki_enabled|bool

    - role: infra_register
      tags: infra-register

#---------------------------------------------------------------
# Node Monitor
#---------------------------------------------------------------
- name: Node Monitor
  become: yes
  hosts: all
  gather_facts: no
  tags: node-monitor
  roles:

    # init & register node exporter
    - role: node_exporter
      tags: node-exporter
      when: node_exporter_enabled|bool

    # init & register promtail log agent
    - role: promtail
      tags: promtail
      when: promtail_enabled|bool

    # register node-exporter & docker to prometheus
    - role: node_register
      tags: node-register

#---------------------------------------------------------------
# init cmdb(s) on meta nodes
#---------------------------------------------------------------
- name: PGSQL Init     # init pgsql cmdb on meta nodes
  become: yes
  hosts: all
  gather_facts: no
  tags: [ pgsql-init ]
  roles:

    - role: postgres        # init postgres pgbouncer patroni
      tags: postgres

    - role: service         # init service , haproxy , vip
      tags: service

    - role: pg_exporter     # init monitor exporters
      tags: pg-exporter

    - role: pg_register     # register cluster/instance to infra
      tags: pg-register


#---------------------------------------------------------------
...
