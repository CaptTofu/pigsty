#!/usr/bin/env ansible-playbook
---
#==============================================================#
# File      :   install.yml
# Desc      :   install everything on all nodes
# Ctime     :   2021-01-19
# Mtime     :   2022-11-29
# Path      :   install.yml
# License   :   AGPLv3
# Copyright (C) 2018-2022 Ruohang Feng (rh@vonng.com)
#==============================================================#

#==============================================================#
# install.yml will interleave infra.yml & node.yml in following
# orders to set up everything in one pass
# - id           : generate node & pgsql identity
# - infra-boot   : environ repo
# - node-init    : node ca docker
# - infra-init   : nameserver nginx prometheus grafana loki
# - node-monitor : node-exporter promtail
# - etcd-init    : etcd
# - pgsql-init   : postgres service pg-exporter pg-register
#
# Which is equivalent to the following 4 playbooks altogether:
# - infra.yml -l infra   deploy infrastructure on group 'infra'
# - node.yml  -l all     init all nodes (except infra nodes)
# - etcd.yml  -l etcd    init etcd on group 'etcd` for pg ha
# - pgsql.yml -l all     deploy postgres database clusters
#==============================================================#

#---------------------------------------------------------------
# setup node & pgsql identity
#---------------------------------------------------------------
- name: IDENTITY
  hosts: all
  gather_facts: no
  tags: id
  roles:
    - { role: node_id ,tags: node-id }
    - { role: pg_id   ,tags: pg-id   ,when: pg_cluster is defined }

#---------------------------------------------------------------
# Setup local CA
#---------------------------------------------------------------
- name: CA
  become: yes
  hosts: localhost
  gather_facts: no
  tags: ca
  roles: [{ role: ca }]

#---------------------------------------------------------------
# bootstrap infra nodes with local yum repo
#---------------------------------------------------------------
- name: INFRA BOOT
  become: yes
  hosts: infra
  gather_facts: no
  tags: infra-boot
  roles:
    - { role: environ    ,tags: environ    }  # setup admin environment vars
    - { role: repo       ,tags: repo       }  # create local yum repo

#---------------------------------------------------------------
# init node , ca, docker
#---------------------------------------------------------------
- name: NODE INIT
  become: yes
  hosts: all
  gather_facts: no
  tags: node-init
  roles:
    - { role: node    ,tags: node    }  # prepare node for pigsty
    - { role: haproxy ,tags: haproxy }  # init haproxy if enabled
    - { role: docker  ,tags: docker  }  # init docker if enabled

#---------------------------------------------------------------
# init dns, nginx, prometheus, grafana, loki
#---------------------------------------------------------------
- name: INFRA INIT
  become: yes
  hosts: infra
  gather_facts: no
  tags: infra-init
  roles:
    - { role: infra_cert     ,tags: infra_cert }  # issue infra cert
    - { role: nginx          ,tags: nginx      }  # setup nginx
    - { role: nameserver     ,tags: nameserver }  # setup dnsmasq
    - { role: prometheus     ,tags: prometheus }  # setup prometheus, alertmanager, pushgateway, blackbox_exporter
    - { role: grafana        ,tags: grafana    }  # setup grafana
    - { role: loki           ,tags: loki       }  # setup loki
    - { role: infra_register ,tags: register   }  # register infra services

#---------------------------------------------------------------
# Node Monitor
#---------------------------------------------------------------
- name: NODE MONITOR
  become: yes
  hosts: all
  gather_facts: no
  tags: node-monitor
  roles:
    - { role: node_exporter ,tags: monitor  }  # init node exporter if enabled
    - { role: promtail      ,tags: promtail }  # init promtail if enabled
    - { role: node_register ,tags: register }  # register node to infra

#---------------------------------------------------------------
# ETCD INIT
#---------------------------------------------------------------
- name: ETCD INIT
  become: yes
  hosts: etcd
  gather_facts: no
  tags: etcd
  roles: [{ role: etcd }]   # init etcd on fixed group 'etcd'

#---------------------------------------------------------------
# INIT PGSQL
#---------------------------------------------------------------
- name: PGSQL Init          # init pgsql cmdb on meta nodes
  become: yes
  hosts: all
  gather_facts: no
  tags: pgsql-init
  roles:
    - { role: postgres    , tags: pgsql    } # init postgres cluster/instance
    - { role: pg_vip      , tags: vip      } # init postgres vip address
    - { role: pg_exporter , tags: monitor  } # setup postgres monitor
    - { role: pg_register , tags: register } # register postgres services

#---------------------------------------------------------------
...