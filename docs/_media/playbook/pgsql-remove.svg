<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 3.0.0 (20220226.1711)
 --><!-- Pages: 1 --><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="559pt" height="44pt" viewBox="0.00 0.00 558.67 44.00" id="svg">
<script type="text/javascript" href="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js" id="jquery"/><script type="text/javascript" id="my_javascript"><![CDATA[/**
 * This file contains the functions responsible to highlight the plays, roles and tasks when rendering the SVG file in a browser
 * or any SVG reader that support Javascript.
 */

/**
 * The name of the CSS class for highlighted elements
 * @type {string}
 */
const HIGHLIGHT_CLASS = "highlight";

/**
 * The current selected element on the graph
 * @type {null}
 */
let currentSelectedElement = null;

/**
 * Highlight the linked nodes of the given root element
 * @param rootElement
 */
function highlightLinkedNodes(rootElement) {
    $(rootElement).find('link').each(function (index, element) {
        let target = $(element).attr('target');
        let currentElement = $('#' + target);
        currentElement.addClass(HIGHLIGHT_CLASS);

        // Recursively highlight
        highlightLinkedNodes(currentElement);
    })
}


/**
 * Unhighlight the linked nodes of the given root element
 * @param {Element} rootElement
 * @param {boolean} isHover True when we are coming from a mouseleave event. In that case, we should not unhighlight if
 * the rootElement is the current selected element
 */
function unHighlightLinkedNodes(rootElement, isHover) {
    const currentSelectedElementId = $(currentSelectedElement).attr('id');

    // Do not unhighlight the current current selected element
    if ($(rootElement).attr('id') !== currentSelectedElementId || !isHover) {

        $(rootElement).find('link').each(function (index, element) {
            let linkedElementId = $(element).attr('target');
            let linkedElement = $('#' + linkedElementId);

            if (linkedElement.attr("id") !== currentSelectedElementId) {
                linkedElement.removeClass(HIGHLIGHT_CLASS);
                // Recursively unhighlight
                unHighlightLinkedNodes(linkedElement, isHover);
            }
            
        })
    }

}

/**
 * Hover handler for mouseenter event
 * @param event
 */
function hoverMouseEnter(event) {
    highlightLinkedNodes(event.currentTarget);
}

/**
 * Hover handler for mouseleave event
 * @param event
 */
function hoverMouseLeave(event) {
    unHighlightLinkedNodes(event.currentTarget, true);
}

/**
 * Handler when clicking on some elements
 * @param event
 */
function clickOnElement(event) {
    let newClickedElement = $(event.currentTarget);

    if (newClickedElement.attr('id') === $(currentSelectedElement).attr('id')) { // clicking again on the same element
        newClickedElement.removeClass(HIGHLIGHT_CLASS);
        unHighlightLinkedNodes(currentSelectedElement, false);
        currentSelectedElement = null;
    } else { // clicking on a different node

        // Remove highlight from all the nodes linked the current selected node
        unHighlightLinkedNodes(currentSelectedElement, false);

        newClickedElement.addClass(HIGHLIGHT_CLASS);
        highlightLinkedNodes(newClickedElement);
        currentSelectedElement = newClickedElement;
    }
}


$("#svg").ready(function () {
    let plays = $("g[id^=play_]");
    let roles = $("g[id^=role_]");
    let blocks = $("g[id^=block_]");

    // Set hover and click events on the plays
    plays.hover(hoverMouseEnter, hoverMouseLeave);
    plays.click(clickOnElement);

    // Set hover and click events on the roles
    roles.hover(hoverMouseEnter, hoverMouseLeave);
    roles.click(clickOnElement);

    // Set hover and click events on the blocks
    blocks.hover(hoverMouseEnter, hoverMouseLeave);
    blocks.click(clickOnElement);

});
]]></script><style type="text/css" id="my_css"><![CDATA[/**
 Hover on nodes, edges, path and polygon
 */
.node:hover, .edge:hover, path:hover, path + polygon:hover {
    cursor: pointer;
    stroke-width: 3;
    font-weight: bolder;
}

/**
 Manually added class by the script highlight-hover.js when hovering on plays and roles
 */
.highlight {
    cursor: pointer;
    stroke-width: 3;
    font-weight: bolder;
}
]]></style><g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 40)">
<polygon fill="white" stroke="transparent" points="-4,4 -4,-40 554.67,-40 554.67,4 -4,4"/>
<!-- pgsql&#45;remove.yml -->
<g id="root_node" class="node">
<title>pgsql-remove.yml</title>
<ellipse fill="none" stroke="black" stroke-dasharray="1,5" cx="76.04" cy="-18" rx="76.09" ry="18"/>
<text text-anchor="middle" x="76.04" y="-14.3" font-family="Times,serif" font-size="14.00">pgsql-remove.yml</text>
</g>
<!-- play_c68e3ab3 -->
<g id="play_c68e3ab3" class="node">
<title>play_c68e3ab3</title>
<g id="a_play_c68e3ab3"><a xlink:title="10.10.10.10,10.10.10.11,10.10.10.12,10.10.10.13">
<polygon fill="#10bc75" stroke="#10bc75" points="358.09,-36 199.09,-36 199.09,0 358.09,0 358.09,-36"/>
<text text-anchor="middle" x="278.59" y="-14.3" font-family="Times,serif" font-size="14.00" fill="#ffffff">Play: PGSQL Remove (4)</text>
</a>
</g>
<links><link target="edge_0a1ccd58"/></links></g>
<!-- pgsql&#45;remove.yml&#45;&gt;play_c68e3ab3 -->
<g id="edge_18f4e886" class="edge">
<title>pgsql-remove.yml-&gt;play_c68e3ab3</title>
<g id="a_edge_18f4e886"><a xlink:title="1 ">
<path fill="none" stroke="#10bc75" d="M152.29,-18C164.18,-18 176.58,-18 188.75,-18" id="path_edge_18f4e886"/>
<polygon fill="#10bc75" stroke="#10bc75" points="188.91,-21.5 198.91,-18 188.91,-14.5 188.91,-21.5"/>
</a>
</g>
<g id="a_edge_18f4e886-label"><a xlink:title="1 ">
<text text-anchor="middle" font-family="Times,serif" font-size="14.00" fill="#10bc75" dy="-1%"><textPath xlink:href="#path_edge_18f4e886" text-anchor="middle" startOffset="50%">1 </textPath></text>
</a>
</g>
<links><link target="play_c68e3ab3"/></links></g>
<!-- role_508970f8 -->
<g id="role_508970f8" class="node">
<title>role_508970f8</title>
<g id="a_role_508970f8"><a xlink:title="pg_remove">
<ellipse fill="none" stroke="#10bc75" cx="477.88" cy="-18" rx="72.59" ry="18"/>
<text text-anchor="middle" x="477.88" y="-14.3" font-family="Times,serif" font-size="14.00">[role] pg_remove</text>
</a>
</g>
</g>
<!-- play_c68e3ab3&#45;&gt;role_508970f8 -->
<g id="edge_0a1ccd58" class="edge">
<title>play_c68e3ab3-&gt;role_508970f8</title>
<g id="a_edge_0a1ccd58"><a xlink:title="1 ">
<path fill="none" stroke="#10bc75" d="M358.13,-18C370.22,-18 382.73,-18 394.89,-18" id="path_edge_0a1ccd58"/>
<polygon fill="#10bc75" stroke="#10bc75" points="395.01,-21.5 405.01,-18 395.01,-14.5 395.01,-21.5"/>
</a>
</g>
<g id="a_edge_0a1ccd58-label"><a xlink:title="1 ">
<text text-anchor="middle" font-family="Times,serif" font-size="14.00" fill="#10bc75" dy="-1%"><textPath xlink:href="#path_edge_0a1ccd58" text-anchor="middle" startOffset="50%">1 </textPath></text>
</a>
</g>
<links><link target="role_508970f8"/></links></g>
</g>
</svg>