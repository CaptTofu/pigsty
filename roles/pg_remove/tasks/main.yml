---
#--------------------------------------------------------------#
# HONOR PG_SAFEGUARD                              [pg_safeguard]
#--------------------------------------------------------------#
- name: ABORT due to pg_safeguard enabled
  connection: local
  when: pg_safeguard|bool
  tags: [ always , pg_safeguard ]
  any_errors_fatal: true
  ignore_errors: false
  fail: msg="Abort due to pg_safeguard for {{ pg_cluster }}-{{ pg_seq }} @ {{ inventory_hostname }} is enabled, override with -e pg_safeguard=false"


#--------------------------------------------------------------#
# remove exporter targets from prometheus           [prometheus]
#--------------------------------------------------------------#
- import_tasks: prometheus.yml
  tags: [ prometheus , register ]


#--------------------------------------------------------------#
# remove pgsql datasource from grafana                 [grafana]
#--------------------------------------------------------------#
- import_tasks: grafana.yml
  tags: [ grafana , register ]


#--------------------------------------------------------------#
# remove pg dns records                                    [dns]
#--------------------------------------------------------------#
- import_tasks: dns.yml
  tags: dns


#--------------------------------------------------------------#
# remove pg vip manager                                    [vip]
#--------------------------------------------------------------#
- import_tasks: vip.yml
  tags: vip


#--------------------------------------------------------------#
# remove service                                    [pg_service]
#--------------------------------------------------------------#
- import_tasks: pg_service.yml
  tags: [ haproxy, pg_service ]


#--------------------------------------------------------------#
# remove monitor                                   [pg_exporter]
#--------------------------------------------------------------#
# pg_exporter, pgbouncer_exporter
- import_tasks: pg_exporter.yml
  tags: pg_exporter


#--------------------------------------------------------------#
# remove pgbouncer                                   [pgbouncer]
#--------------------------------------------------------------#
- import_tasks: pgbouncer.yml
  tags: pgbouncer


#--------------------------------------------------------------#
# remove postgres                                     [postgres]
#--------------------------------------------------------------#
# pg_replica, pg_primary, pg_meta
- import_tasks: postgres.yml
  tags: postgres


#--------------------------------------------------------------#
# remove backup                                      [pg_backup]
#--------------------------------------------------------------#
- name: remove postgres backup
  tags: pg_backup
  when: rm_pgbkup|bool
  ignore_errors: yes
  block:

    - name: remove postgres backup repo
      when: pgbackrest_method == 'minio' and pg_role == 'primary'
      become: yes
      become_user: "{{ pg_dbsu }}"
      shell: |
        if [[ -f /etc/pgbackrest/pgbackrest.conf ]]; then
          pgbackrest --stanza={{ pg_cluster }} --force stop;
          pgbackrest --stanza={{ pg_cluster }} --force stanza-delete;
        fi

    - name: remove postgres backup dir
      when: pgbackrest_method == 'local'
      file: path={{ pg_fs_bkup }}/postgres state=absent

    - name: remove postgres backup config
      file: path=/etc/pgbackrest/pgbackrest.conf state=absent


#--------------------------------------------------------------#
# remove data                                          [pg_data]
#--------------------------------------------------------------#
- name: remove postgres data
  tags: pg_data
  when: rm_pgdata|bool
  ignore_errors: yes
  file: path={{ item }} state=absent
  with_items:
    - /pg/data
    - "{{ pg_fs_main }}/postgres"


#--------------------------------------------------------------#
# remove packages                                       [pg_pkg]
#--------------------------------------------------------------#
- name: remove postgres packages
  tags: pg_pkg
  when: rm_pgpkgs|bool
  ignore_errors: yes
  block:

    # remove pg path & alias
    - name: remove postgres environ
      file: path={{ item }} state=absent
      with_items:
        - /etc/profile.d/pgsql.sh
        - /etc/profile.d/pg-alias.sh

    # uninstall postgres extensions
    - name: uninstall pg extensions
      yum: state=absent name={{ item|replace('${pg_version}', pg_version|string)|replace(' ',',') }}
      with_items: "{{ pg_extensions }}"

    # uninstall postgres basic packages
    - name: uninstall pg packages
      yum: state=absent name={{ item|replace('${pg_version}', pg_version|string)|replace(' ',',') }}
      with_items: "{{ pg_packages }}"

...