---
#--------------------------------------------------------------#
# HONOR PG_SAFEGUARD
#--------------------------------------------------------------#
- name: ABORT due to pg_safeguard enabled
  connection: local
  when: pg_safeguard|bool
  tags: [ always , pg_safeguard ]
  any_errors_fatal: true
  ignore_errors: false
  fail: msg="Abort due to pg_safeguard for {{ pg_cluster }}-{{ pg_seq }} @ {{ inventory_hostname }} is enabled, override with -e pg_safeguard=false"

#--------------------------------------------------------------#
# remove exporter targets from prometheus
#--------------------------------------------------------------#
- import_tasks: prometheus.yml
  tags: [ prometheus , register ]

#--------------------------------------------------------------#
# remove pgsql datasource from grafana
#--------------------------------------------------------------#
- import_tasks: grafana.yml
  tags: [ grafana , register ]

#--------------------------------------------------------------#
# remove haproxy index from nginx
#--------------------------------------------------------------#
- import_tasks: nginx.yml
  tags: [ nginx , register ]

#--------------------------------------------------------------#
# remove service (haproxy, vip)
#--------------------------------------------------------------#
- import_tasks: service.yml
  tags: service

#--------------------------------------------------------------#
# remove monitor
#--------------------------------------------------------------#
- import_tasks: monitor.yml
  tags: monitor

#--------------------------------------------------------------#
# remove pgbouncer
#--------------------------------------------------------------#
- import_tasks: pgbouncer.yml
  tags: pgbouncer

#--------------------------------------------------------------#
# remove postgres
#--------------------------------------------------------------#
- import_tasks: postgres.yml
  tags: postgres

#--------------------------------------------------------------#
# remove data
#--------------------------------------------------------------#
- name: remove postgres data
  tags: pgdata
  when: rm_pgdata|bool
  ignore_errors: yes
  file: path={{ item }} state=absent
  with_items:
    - /pg/data
    - "{{ pg_fs_main }}/postgres"

#--------------------------------------------------------------#
# remove backup
#--------------------------------------------------------------#
- name: remove postgres backup
  tags: pgbkup
  when: rm_pgbkup|bool
  ignore_errors: yes
  file: path={{ pg_fs_bkup }}/postgres state=absent

- name: remove postgres backup config
  tags: pgbkup
  when: rm_pgbkup|bool
  ignore_errors: yes
  file: path=/etc/pgbackrest/pgbackrest.conf state=absent


#--------------------------------------------------------------#
# remove packages
#--------------------------------------------------------------#
- name: remove postgres packages
  tags: pgpkgs
  when: rm_pgpkgs|bool
  ignore_errors: yes
  block:

    # remove pg path & alias
    - name: remove postgres environ
      file: path={{ item }} state=absent
      with_items:
        - /etc/profile.d/pgsql.sh
        - /etc/profile.d/pg-alias.sh

    # uninstall postgres extensions
    - name: uninstall pg extensions
      yum: state=absent name={{ item | regex_replace('\${pg_version}', pg_version|string) |regex_replace(' ',',') }} disable_gpg_check=true
      with_items: "{{ pg_extensions }}"

    # uninstall postgres basic packages
    - name: uninstall pg packages
      yum: state=absent name={{ item | regex_replace('\${pg_version}', pg_version|string) |regex_replace(' ',',') }} disable_gpg_check=true
      with_items: "{{ pg_packages }}"

...