---
#==============================================================#
# Clean existing etcd
#==============================================================#

#---------------------------------------------------------------
# check postgres instance precondition
#  --- empty  ---> clean ---> init
#  --- exist  ^--> [etcd_safeguard=true]  ---> abort
#             ^--> [etcd_safeguard=false]
#                         ^--> [etcd_clean=false] ---> abort
#                         ^--> [etcd_clean=true]  ---> purge
#---------------------------------------------------------------


#------------------------------------------------------------------------------
# Check etcd                                                       [etcd_check]
#------------------------------------------------------------------------------
- name: check etcd exists
  tags: etcd_check
  block:

    # check etcd by listening port
    - name: check etcd exists
      command: 'ss -tp state listening sport = :{{ etcd_port }}'
      register: check_etcd_port_result
    - name: set etcd_exists flag
      connection: local
      set_fact:
        etcd_exists: "{{ 'etcd' in check_etcd_port_result.stdout }}"

    # when any running etcd exists, abort play in two cases:
    # 1. etcd_safeguard = true    # prevent accidentally purge at all
    # 2. etcd_clean = false       # etcd_clean=true is required for purging during init
    - name: abort etcd purging
      connection: local
      any_errors_fatal: true
      when: etcd_exists and (etcd_safeguard or not etcd_clean)
      fail:
        msg: >-
          Abort because etcd instance {{ etcd_cluster }}-{{ etcd_seq }} @ {{ inventory_hostname }} exists.
           {% if etcd_safeguard|bool %}etcd_safeguard enabled, please disable it before purging.{% endif %}
           {% if not etcd_clean|bool %}etcd_clean = false, use -e etcd_clean=true to override.{% endif %}

#------------------------------------------------------------------------------
# Purge etcd                                                       [etcd_purge]
#------------------------------------------------------------------------------
- name: purge etcd
  tags: etcd_purge
  block:

    # dangerous: (it will remove etcd data!)
    - name: WARNING, PURGE ETCD INSTANCE
      # connection: local, leave a chance for human intervention
      when: not etcd_safeguard and etcd_exists and etcd_clean # DANGEROUS!
      debug:
        msg: "[DANGEROUS] RUNNING ETCD INSTANCE {{ inventory_hostname }} WILL BE PURGED!"

    - name: purge etcd
      ignore_errors: yes
      shell: |
        # try graceful shutdown first
        if ps -u etcd -o command | grep -q 'etcd' ; then
            /usr/bin/etcd leave
            systemctl stop etcd
        fi
        
        # kill if still exists
        if ps -u etcd -o command | grep -q 'etcd' ; then
            sleep 2
            ps -u etcd -o pid:1,command | grep 'etcd' | awk '{print $1}' | xargs kill
        fi
        
        # kill -9 if not killed 
        if ps -u etcd -o command | grep -q 'etcd' ; then
            sleep 5
            ps -u etcd -o pid:1,command | grep 'etcd' | awk '{print $1}' | xargs kill -9
        fi
        
        # guaranteed success
        rm -rf /etc/etcd
        rm -rf /var/lib/etcd/*
        rm -rf "{{ etcd_data }}"
        rm -f /etc/profile.d/etcd.sh
        exit 0

...