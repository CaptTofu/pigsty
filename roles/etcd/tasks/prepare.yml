---
#------------------------------------------------------------------------------
# Check etcd
#------------------------------------------------------------------------------
- name: Check existing etcd
  tags: etcd_check
  when: inventory_hostname in dcs_servers.values()
  block:
    #--------------------------------------------------------------------------
    # check etcd exists
    #--------------------------------------------------------------------------
    - name: Check for existing etcd
      command: 'ss -tp state listening sport = :2379'
      register: check_etcd_port_result

    - name: Etcd exists flag fact set
      connection: local
      set_fact:
        etcd_exists: "{{ 'etcd' in check_etcd_port_result.stdout }}"

    #--------------------------------------------------------------------------
    # abort if etcd already exists
    #--------------------------------------------------------------------------
    # when any running etcd instance exists, abort play in two cases:
    # 1. dcs_safeguard = true          (global flag to prevent accidentally purge)
    # 2. dcs_clean = true
    - name: Abort due to etcd exists
      connection: local
      any_errors_fatal: true
      when: etcd_exists and (dcs_safeguard or not dcs_clean)
      fail: msg="Abort because etcd instance already exists, use dcs_clean=true"


#------------------------------------------------------------------------------
# Clean etcd
#------------------------------------------------------------------------------
- name: Clean existing etcd
  tags: etcd_clean
  when: inventory_hostname in dcs_servers.values()
  block:
    #--------------------------------------------------------------------------
    # purge dcs
    #--------------------------------------------------------------------------
    # dangerous: (it will remove etcd data!)
    - name: Clean existing etcd instance
      # connection: local, leave a chance for human intervention
      when: not dcs_safeguard and etcd_exists and dcs_clean # DANGEROUS!
      debug:
        msg: "[DANGEROUS] RUNNING etcd INSTANCE {{ inventory_hostname }} WILL BE PURGED!"

    - name: Stop any running etcd instance
      ignore_errors: yes
      shell: |
        # try graceful shutdown first
        if ps -u etcd -o command | grep -q 'etcd' ; then
            /usr/bin/etcd leave
            systemctl stop etcd
        fi
        
        # kill if still exists
        if ps -u etcd -o command | grep -q 'etcd' ; then
            sleep 2
            ps -u etcd -o pid:1,command | grep 'etcd' | awk '{print $1}' | xargs kill
        fi
        
        # kill -9 if not killed 
        if ps -u etcd -o command | grep -q 'etcd' ; then
            sleep 5
            ps -u etcd -o pid:1,command | grep 'etcd' | awk '{print $1}' | xargs kill -9
        fi
        
        # guaranteed success
        rm -rf /etc/etcd
        rm -rf /var/lib/etcd/*
        rm -rf "{{ etcd_data_dir }}"
        rm -f /etc/profile.d/etcd.sh
        exit 0


#------------------------------------------------------------------------------
# ETCD User
#------------------------------------------------------------------------------
- name: Add etcd user to dcs group
  tags: etcd_user
  user: name=etcd home=/var/lib/etcd groups=dcs append=yes

#------------------------------------------------------------------------------
# ETCD Dir
#------------------------------------------------------------------------------
- name: Create etcd dir
  tags: etcd_dir
  block:

    - name: Create etcd config dir
      file: path={{ item }} state=directory owner=etcd group=etcd mode=0750
      with_items:
        - /etc/etcd
        - /var/lib/etcd

    - name: Create etcd data dir
      file: path="{{ etcd_data_dir }}" state=directory owner=etcd group=etcd mode=0700
...