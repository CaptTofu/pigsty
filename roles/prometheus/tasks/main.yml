---
#------------------------------------------------------------------------------
# Prometheus & Altermanager
#------------------------------------------------------------------------------

#------------------------------------------------------------------------------
# Install
#------------------------------------------------------------------------------
- name: Install prometheus and alertmanager
  tags: prometheus_install
  package: name={{ item }} state=present
  with_items:
    - prometheus2
    - alertmanager


#------------------------------------------------------------------------------
# Cleanup
#------------------------------------------------------------------------------
- name: Clean existing prometheus and alertmanager
  tags: prometheus_clean
  when: not prometheus_reload
  block:
    # - clean - #
    - name: Wipe out prometheus config dir
      file: path=/etc/prometheus state=absent

    - name: Wipe out existing prometheus data
      file: path={{ prometheus_data_dir }} state=absent


#------------------------------------------------------------------------------
# Config
#------------------------------------------------------------------------------
- name: Setup prometheus and alertmanager
  tags: prometheus_config
  block:
    - name: Create postgres directory structure
      file: path={{ item }} state=directory owner=prometheus group=prometheus mode=700
      with_items:
        - /etc/prometheus
        - /etc/prometheus/bin
        - /etc/prometheus/rules
        - /etc/prometheus/targets
        - "{{ prometheus_data_dir }}"

    # - bin scripts - #
    - name: Copy prometheus bin scripts
      copy: src=bin/ dest=/etc/prometheus/bin/ owner=prometheus mode=0755

    # - pre-process & alerting rules - #
    - name: Copy prometheus rules scripts
      copy: src=rules/ dest=/etc/prometheus/rules/ owner=prometheus mode=0755

    # - main config - #
    - name: Copy altermanager config
      copy: src=alertmanager.yml dest=/etc/prometheus/alertmanager.yml owner=prometheus mode=0644

    - name: Render prometheus config
      template: src=prometheus.yml.j2 dest=/etc/prometheus/prometheus.yml owner=prometheus mode=0644

    # - overwrite opts - #
    - name: Config /etc/prometheus opts
      template: src=prometheus.default.j2 dest=/etc/default/prometheus owner=prometheus mode=0755



#------------------------------------------------------------------------------
# Launch
#------------------------------------------------------------------------------
- name: Launch prometheus and alertmanager
  tags: prometheus_launch
  block:
    # - launch - #
    - name: Launch prometheus service
      systemd: name=prometheus state=restarted enabled=yes daemon_reload=yes

    - name: Launch alertmanager service
      systemd: name=alertmanager state=restarted enabled=yes daemon_reload=yes

    # - wait - #
    - name: Wait for prometheus online
      wait_for: host=127.0.0.1 port=9090 state=started

    - name: Wait for alertmanager online
      wait_for: host=127.0.0.1 port=9093 state=started



#------------------------------------------------------------------------------
# Targets
#------------------------------------------------------------------------------
- name: Add static monitor targets
  tags: prometheus_targets
  block:
    - name: Fetch prometheus static monitoring targets
      connection: local
      set_fact:
        prometheus_targets={{ hostvars|json_query(prometheus_targets_query) }}
      vars:
        prometheus_targets_query: "[@.*][0][].{cls: pg_cluster, role: pg_role, seq: pg_seq, ip:inventory_hostname, node_enabled:node_exporter_enabled, node_port:node_exporter_port, pg_enabled:pg_exporter_enabled, pg_port:pg_exporter_port, pgbouncer_enabled:pgbouncer_exporter_enabled, pgbouncer_port:pgbouncer_exporter_port , haproxy_enabled:haproxy_enabled, haproxy_port:haproxy_exporter_port }"

    # render in batch mode
    - name: Render prometheus static targets in batch
      tags: prometheus_targets
      when: prometheus_sd_target == 'batch'
      template: src=targets.yml.j2 dest=/etc/prometheus/targets/all.yml

    # render in single mode
    - name: Render prometheus static targets2
      when: prometheus_sd_target == 'single'
      template: src=target.yml.j2 dest=/etc/prometheus/targets/{{ target.cls }}-{{ target.seq }}.yml
      vars:
        target: "{{ item }}"
      with_items: "{{ prometheus_targets }}"



#------------------------------------------------------------------------------
# Reload
#------------------------------------------------------------------------------
- name: Reload prometheus and alertmanager
  tags: prometheus_reload
  block:
    - name: Reload prometheus service
      systemd: name=prometheus state=reloaded enabled=yes daemon_reload=yes


#------------------------------------------------------------------------------
# Register prometheus & alertmanager service (optional)
#------------------------------------------------------------------------------
- name: Register prometheus and alertmanager service
  tags: prometheus_register
  when: service_registry == 'consul'
  block:
  - name: Copy prometheus service definition
    template: src=svc-prometheus.json.j2 dest=/etc/consul.d/svc-prometheus.json owner=consul mode=0660

  - name: Copy alertmanager service definition
    template: src=svc-alertmanager.json.j2 dest=/etc/consul.d/svc-alertmanager.json owner=consul mode=0660

  - name: Reload consul to register prometheus
    systemd: name=consul state=reloaded enabled=yes daemon_reload=yes

...


