#--------------------------------------------------------------#
# Extract plugins cache if applicable
#--------------------------------------------------------------#
- name: Check grafana plugin cache exists
  stat: path={{ grafana_cache }}
  register: grafana_plugins_cache

- name: Provision grafana plugins via cache if exists
  tags: grafana_plugins_unzip
  when: grafana_plugins_cache.stat.exists
  shell: |
    [[ -a "{{ grafana_cache }}" ]] && rm -rf /var/lib/grafana/plugins && tar -xf {{ grafana_cache }} -C /var/lib/grafana
    chown -R grafana /var/lib/grafana


#--------------------------------------------------------------#
# download plugins from internet if
#   1. cache not exists
#   2. grafana_plugin = install     (default)
#      if grafana_plugin != install , skip plugin download
#--------------------------------------------------------------#
- name: Download grafana plugins via internet
  when: not grafana_plugins_cache.stat.exists or grafana_plugin == 'install'
  ignore_errors: true
  environment: "{{ proxy_env | default({}) }}"
  grafana_plugin: name={{ item }}
  with_items: "{{ grafana_plugins  }}"


- name: Download grafana plugins via git
  when: not grafana_plugins_cache.stat.exists or grafana_plugin == 'install'
  ignore_errors: true
  environment: "{{ proxy_env | default({}) }}"
  git:
    repo: '{{ item }}'
    dest: /var/lib/grafana/plugins/{{ item | basename }}
    update: yes
  with_items: "{{ grafana_git_plugins }}"
