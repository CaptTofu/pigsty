---
#------------------------------------------------------------------------------
# Install node_exporter
#------------------------------------------------------------------------------
- name: Install node_exporter
  tags: [ node_exporter, node_exporter_install ]
  when: node_exporter_enabled|bool and exporter_install != 'none'
  block:

    # install via yum
    # if exporter_repo_url is set, add that url repo to /etc/yum.repos.d first
    - name: Add yum repo for node_exporter
      when: exporter_install == 'yum' and exporter_repo_url != ''
      get_url:
        url: "{{ exporter_repo_url }}"
        dest: /etc/yum.repos.d/{{ item | basename }}

    - name: Install node_exporter via yum
      when: and exporter_install == 'yum'
      package: name=node_exporter state=present

    # install via copy binary
    # the binary MUST be put into files/bin directory before running
    - name: Install node_exporter via binary
      ignore_errors: true
      when: exporter_install == 'binary'
      copy: src=bin/node_exporter dest=/usr/bin/node_exporter owner=root mode=0755


#------------------------------------------------------------------------------
# Config node_exporter
#------------------------------------------------------------------------------
- name: Config node_exporter
  tags: [ node_exporter, node_exporter_config ]
  when: node_exporter_enabled|bool
  block:
    - name: Config node_exporter systemd unit
      template: src=node_exporter.service.j2 dest=/usr/lib/systemd/system/node_exporter.service

    - name: Config default node_exporter options
      template: src=node_exporter.j2 dest=/etc/default/node_exporter

#------------------------------------------------------------------------------
# Launch node_exporter
#------------------------------------------------------------------------------
- name: Launch node_exporter
  tags: [ node_exporter, node_exporter_launch ]
  block:
    - name: Launch node_exporter systemd unit
      systemd: name=node_exporter state=restarted enabled=yes daemon_reload=yes

    - name: Wait for node_exporter online
      wait_for: host=127.0.0.1 port={{ node_exporter_port }} state=started timeout=10

#------------------------------------------------------------------------------
# Register node_exporter
#------------------------------------------------------------------------------
- name: Deregister node exporter from prometheus
  tags: [ node_deregister, deregister_prometheus ]
  delegate_to: '{{ item }}'
  with_items: '{{ groups["meta"] }}'
  file: path=/etc/prometheus/targets/nodes/{{ inventory_hostname }}.yml state=absent

- name: Register node exporter as prometheus target
  tags: [ node_exporter, node_register, register_prometheus ]
  when: node_exporter_enabled|bool
  block:

    # use hostname as nodename if not provided
    - name: Fetch hostname from server if no node name is given
      when: nodename is not defined or nodename == ''
      shell: echo $HOSTNAME
      register: hostname_result

    - name: Setup nodename according to hostname
      when: nodename is not defined or nodename == ''
      set_fact:
        nodename: "{{ hostname_result.stdout }}"

    # /etc/prometheus/targets/nodes/{{ ip }}.yml
    - name: Register node exporter as prometheus target
      tags: [ node_exporter, node_register, register_prometheus ]
      delegate_to: '{{ item }}'
      with_items: '{{ groups["meta"] }}'
      copy:
        dest: /etc/prometheus/targets/nodes/{{ inventory_hostname }}.yml
        content: |
          # {{ inventory_hostname }}
          - labels: { ip: {{ inventory_hostname }} , ins: {{ nodename }} , cls: {{ node_cluster|default('nodes') }} }
            targets: [ {{ inventory_hostname }}:{{ node_exporter_port }} ]


...