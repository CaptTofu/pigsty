---
#--------------------------------------------------------------#
# Install node_exporter                  [node_exporter_install]
#--------------------------------------------------------------#
- name: install node_exporter
  tags: [ node_exporter, node_exporter_install ]
  ignore_errors: "{{ not node_exporter_enabled|bool }}" # ignore errors if not enabled
  when: exporter_install != 'none' # node_exporter_enabled|bool
  block:

    # install via yum
    # if exporter_repo_url is set, add that url repo to /etc/yum.repos.d first
    - name: add yum repo for node_exporter
      when: exporter_install == 'yum' and exporter_repo_url != ''
      get_url:
        url: "{{ exporter_repo_url }}"
        dest: /etc/yum.repos.d/{{ item | basename }}

    - name: install node_exporter via yum
      when: and exporter_install == 'yum'
      package: name=node_exporter state=present

    # install via copy binary
    # the binary MUST be put into files/bin directory before running
    - name: install node_exporter via copy binary
      ignore_errors: true
      when: exporter_install == 'binary'
      copy: src=bin/node_exporter dest=/usr/bin/node_exporter owner=root mode=0755


#--------------------------------------------------------------#
# Config node_exporter                    [node_exporter_config]
#--------------------------------------------------------------#
- name: config node_exporter
  tags: [ node_exporter, node_exporter_config ]
  block:

    - name: config node_exporter systemd unit
      copy: src=node_exporter.service dest=/usr/lib/systemd/system/node_exporter.service

    - name: config default node_exporter options
      copy:
        dest: /etc/default/node_exporter
        content: |
          NODE_EXPORTER_OPTS="--web.listen-address=':{{ node_exporter_port }}' --web.telemetry-path='{{ exporter_metrics_path }}' {{ node_exporter_options }}"


#--------------------------------------------------------------#
# Launch node_exporter                    [node_exporter_launch]
#--------------------------------------------------------------#
- name: Launch node_exporter
  tags: [ node_exporter, node_exporter_launch ]
  when: node_exporter_enabled|bool
  block:

    - name: launch node_exporter systemd service
      systemd: name=node_exporter state=restarted enabled=yes daemon_reload=yes

    - name: wait for node_exporter service online
      wait_for: host=127.0.0.1 port={{ node_exporter_port }} state=started timeout=10



#--------------------------------------------------------------#
# Register Node             [node_register, register_prometheus]
#--------------------------------------------------------------#
# /etc/prometheus/targets/node/{{ ip }}.yml
- name: register node as prometheus target
  tags: [ node_register, register_prometheus ]
  ignore_errors: true
  delegate_to: '{{ item }}'
  with_items: '{{ groups["infra"] }}'
  copy:
    dest: /etc/prometheus/targets/node/{{ inventory_hostname }}.yml
    content: |
      # {{ inventory_hostname }}
      - labels: { ip: {{ inventory_hostname }} , ins: {{ nodename }} , cls: {{ node_cluster|default('nodes') }} }
        targets: {% if not node_exporter_enabled|bool and not haproxy_enabled|bool and docker_enabled|bool and not promtail_enabled|bool %}[]{% endif %} 

          {% if node_exporter_enabled|bool %}- {{ inventory_hostname }}:{{ node_exporter_port }}{% endif %}
      
          {% if haproxy_enabled|bool %}- {{ inventory_hostname }}:{{ haproxy_exporter_port }}{% endif %}
      
          {% if docker_enabled|bool %}- {{ inventory_hostname }}:9323{% endif %}
      
          {% if promtail_enabled|bool %}- {{ inventory_hostname }}:{{ promtail_port }}{% endif %}


...