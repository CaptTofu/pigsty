---
#------------------------------------------------------------------------------
# Install
#------------------------------------------------------------------------------
- import_tasks: install.yml
  tags: install

#------------------------------------------------------------------------------
# Prepare
#------------------------------------------------------------------------------
# check pg existence, cleanup, create directories, copy scripts
- import_tasks: prepare.yml
  tags: prepare

#------------------------------------------------------------------------------
# config
#------------------------------------------------------------------------------
- import_tasks: config.yml
  tags: [ pg_config, patroni ]
  when: patroni_enabled|bool

- import_tasks: cert.yml
  tags: pg_cert
  when: patroni_ssl_enabled|bool or pg_sslmode != 'disable'

#------------------------------------------------------------------------------
# patroni
#------------------------------------------------------------------------------
# bootstrap postgres cluster with patroni (skip if patroni_enabled = false)
- import_tasks: patroni.yml
  tags: [ pg_launch, patroni ]
  when: patroni_enabled|bool

#------------------------------------------------------------------------------
# Pgbouncer
#------------------------------------------------------------------------------
# install connection pooling middleware
- import_tasks: pgbouncer.yml
  tags: pgbouncer
  when: pgbouncer_enabled|bool

#------------------------------------------------------------------------------
# Users
#------------------------------------------------------------------------------
- include_tasks: createuser.yml
  tags: pg_user
  when: pg_provision|bool
  vars:
    user: "{{ item }}"
  with_items: "{{ pg_users }}"

#------------------------------------------------------------------------------
# Databases
#------------------------------------------------------------------------------
- include_tasks: createdb.yml
  when: pg_provision|bool
  tags: pg_db
  vars:
    database: "{{ item }}"
  with_items: "{{ pg_databases }}"


#------------------------------------------------------------------------------
# Pgbouncer Reload
#------------------------------------------------------------------------------
- name: Reload pgbouncer to add db and users
  tags: pgbouncer_reload
  when: pgbouncer_enabled|bool and pg_provision|bool
  systemd: name=pgbouncer state=reloaded enabled=yes daemon_reload=yes

...