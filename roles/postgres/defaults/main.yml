---
#-----------------------------------------------------------------
# PG_IDENTITY
#-----------------------------------------------------------------
# pg_cluster:                     # <CLUSTER>  <REQUIRED>  : pgsql cluster name
# pg_role: replica                # <INSTANCE> <REQUIRED>  : pg role : primary, replica, offline
# pg_seq: 0                       # <INSTANCE> <REQUIRED>  : instance seq number
# pg_instances: {}                # <INSTANCE>             : define multiple pg instances on node, used by monly & gpsql
# pg_upstream:                    # <INSTANCE>             : replication upstream ip addr
# pg_shard:                       # <CLUSTER>              : pgsql shard name
# pg_sindex: 0                    # <CLUSTER>              : pgsql shard index
# gp_role: master                 # <CLUSTER>              : gpsql role, master or segment
pg_offline_query: false           # <INSTANCE> [FLAG] set to true to enable offline query on this instance (instance level)
pg_weight: 100                    # <INSTANCE> [FLAG] default load balance weight (instance level)

#-----------------------------------------------------------------
# PG_BUSINESS
#-----------------------------------------------------------------
# NOTICE: overwrite these variables on <CLUSTER> level
pg_users: []                      # business users
pg_databases: []                  # business databases
pg_services: []                   # business services
pg_hba_rules: []                  # business hba rules for postgres
pgb_hba_rules: []                 # business hba rules for pgbouncer

# WARNING: change these credentials in production deployment!
pg_admin_username: dbuser_dba
pg_admin_password: DBUser.DBA
pg_monitor_username: dbuser_monitor
pg_monitor_password: DBUser.Monitor
pg_replication_username: replicator
pg_replication_password: DBUser.Replicator
patroni_username: postgres
patroni_password: Patroni.API

#-----------------------------------------------------------------
# PG_INSTALL
#-----------------------------------------------------------------
pg_dbsu: postgres                 # os user for database, postgres by default, better not change it
pg_dbsu_uid: 26                   # os dbsu uid and gid, 26 for default postgres users and groups
pg_dbsu_sudo: limit               # dbsu sudo privilege: none|limit|all|nopass, limit by default
pg_dbsu_home: /var/lib/pgsql      # postgresql home directory
pg_dbsu_ssh_exchange: true        # exchange postgres dbsu ssh key among same cluster ?
pg_version: 15                    # default postgresql version to be installed
pg_bin_dir: /usr/pgsql/bin        # postgres binary dir, /usr/pgsql/bin by default, ln -S /usr/pgsql-{ver} /usr/pgsql
pg_log_dir: /pg/log/postgres      # postgres log dir, /pg/log/postgres by default
pg_packages:                      # postgresql related packages. `${pg_version} will be replaced by `pg_version`
  - postgresql${pg_version}*
  - pgbouncer pg_exporter pgbadger haproxy vip-manager patroni patroni-etcd pgbackrest pg_activity
pg_extensions:                    # postgresql extensions, `${pg_version} will be replaced by actual `pg_version`
  - postgis33_${pg_version}* pg_repack_${pg_version} wal2json_${pg_version} #citus111_${pg_version} timescaledb-2-postgresql-${pg_version}

#-----------------------------------------------------------------
# PG_BOOTSTRAP
#-----------------------------------------------------------------
pg_safeguard: false               # prevent purging running postgres instance?
pg_clean: true                    # purging existing postgres during initialization?
pg_data: /pg/data                 # postgres data directory, /pg/data by default
pg_fs_main: /data                 # main data disk path, /data by default
pg_fs_bkup: /data/backups         # backup disk path, /data/backups by default
pg_storage_type: SSD              # main storage type, SSD or HDD, SSD by default
pg_dummy_filesize: 64MiB          # size of /pg/dummy, which hold some fs space for emergency use
pg_listen: '0.0.0.0'              # postgres listen address, '0.0.0.0' (all ipv4 addr) by default
pg_port: 5432                     # postgres port, 5432 by default
pg_localhost: /var/run/postgresql # unix socket dir for localhost connection
patroni_enabled: true             # if not enabled, no postgres cluster will be created
patroni_mode: default             # patroni working mode: pause|default|remove
pg_namespace: /pg                 # top level key namespace in etcd
patroni_port: 8008                # patroni port, 8008 by default
patroni_log_dir: /pg/log/patroni  # patroni log dir, /pg/log/patroni by default
patroni_ssl_enabled: false        # secure patroni RestAPI communications with SSL?
patroni_watchdog_mode: automatic  # patroni watchdog mode: off|automatic|required, automatic by default
pg_conf: oltp.yml                 # pgsql template: {oltp|olap|crit|tiny}.yml , oltp.yml by default
pg_rto: 30                        # recovery time objective, ttl to failover, 30s by default
pg_rpo: 1048576                   # recovery point objective, 1MB data loss at most by default
pg_libs: 'pg_stat_statements, auto_explain'  # extensions to be loaded, pg_stat_statements & auto_explain by default
pg_delay: 0                       # replication delay for standby cluster leader
pg_checksum: false                # enable data checksum for postgres cluster?
pg_pwd_enc: scram-sha-256         # algorithm for encrypting passwords: md5|scram-sha-256
pg_sslmode: allow                 # disable|allow|prefer|require|verify-ca|verify-full, allow by default
pg_encoding: UTF8                 # database cluster encoding, UTF8 by default
pg_locale: C                      # database cluster local, C by default
pg_lc_collate: C                  # database cluster collate, C by default
pg_lc_ctype: en_US.UTF8           # database character type, en_US.UTF8 by default
pgbouncer_enabled: true           # setup pgbouncer on pgsql host?
pgbouncer_port: 6432              # pgbouncer port, 6432 by default
pgbouncer_log_dir: /pg/log/pgbouncer  # pgbouncer log dir, /pg/log/pgbouncer by default
pgbouncer_auth_query: false       # query postgres user table to retrieve unlisted business users?
pgbouncer_poolmode: session       # pooling mode: session|transaction|statement, session pooling by default
pgbouncer_max_db_conn: 100        # max connection to single database, 100 by default

#-----------------------------------------------------------------
# PG_PROVISION
#-----------------------------------------------------------------
pg_provision: true                # whether provisioning postgres cluster
pg_init: pg-init                  # init script for cluster template
pg_default_roles:
  - { name: dbrole_readonly  , login: false , comment: role for global read-only access  }                                # production read-only role
  - { name: dbrole_readwrite , login: false , roles: [dbrole_readonly], comment: role for global read-write access }      # production read-write role
  - { name: dbrole_offline   , login: false , comment: role for restricted read-only access (offline instance) }          # restricted-read-only role
  - { name: dbrole_admin     , login: false , roles: [pg_monitor, dbrole_readwrite] , comment: role for object creation } # production DDL change role
  - { name: dbuser_monitor   , roles: [pg_monitor, dbrole_readonly] , comment: system monitor user , parameters: {log_min_duration_statement: 1000 } }
  - { name: postgres     , superuser: true  , comment: system superuser }                             # system dbsu, name is designated by `pg_dbsu`
  - { name: dbuser_dba   , superuser: true  , roles: [dbrole_admin] , comment: system admin user }    # admin dbsu, name is designated by `pg_admin_username`
  - { name: replicator , replication: true  , bypassrls: true , roles: [pg_monitor, dbrole_readonly] , comment: system replicator }  # replicator
  - { name: dbuser_stats  , password: DBUser.Stats , roles: [dbrole_offline] , comment: business offline user for offline queries and ETL } # ETL user
pg_default_privileges:            # default privileges created by admin user
  - GRANT USAGE     ON SCHEMAS   TO dbrole_readonly
  - GRANT SELECT    ON TABLES    TO dbrole_readonly
  - GRANT SELECT    ON SEQUENCES TO dbrole_readonly
  - GRANT EXECUTE   ON FUNCTIONS TO dbrole_readonly
  - GRANT USAGE     ON SCHEMAS   TO dbrole_offline
  - GRANT SELECT    ON TABLES    TO dbrole_offline
  - GRANT SELECT    ON SEQUENCES TO dbrole_offline
  - GRANT EXECUTE   ON FUNCTIONS TO dbrole_offline
  - GRANT INSERT    ON TABLES    TO dbrole_readwrite
  - GRANT UPDATE    ON TABLES    TO dbrole_readwrite
  - GRANT DELETE    ON TABLES    TO dbrole_readwrite
  - GRANT USAGE     ON SEQUENCES TO dbrole_readwrite
  - GRANT UPDATE    ON SEQUENCES TO dbrole_readwrite
  - GRANT TRUNCATE  ON TABLES    TO dbrole_admin
  - GRANT REFERENCE ON TABLES    TO dbrole_admin
  - GRANT TRIGGER   ON TABLES    TO dbrole_admin
  - GRANT CREATE    ON SCHEMAS   TO dbrole_admin
pg_default_schemas: [ monitor ]   # default schemas to be created
pg_default_extensions:            # default extensions to be created
  - { name: adminpack          ,schema: pg_catalog }
  - { name: pg_stat_statements ,schema: monitor }
  - { name: pgstattuple        ,schema: monitor }
  - { name: pg_buffercache     ,schema: monitor }
  - { name: pageinspect        ,schema: monitor }
  - { name: pg_prewarm         ,schema: monitor }
  - { name: pg_visibility      ,schema: monitor }
  - { name: pg_freespacemap    ,schema: monitor }
  - { name: postgres_fdw       ,schema: public  }
  - { name: file_fdw           ,schema: public  }
  - { name: btree_gist         ,schema: public  }
  - { name: btree_gin          ,schema: public  }
  - { name: pg_trgm            ,schema: public  }
  - { name: intagg             ,schema: public  }
  - { name: intarray           ,schema: public  }
  - { name: pg_repack }
pg_reload: true                   # reload postgres after hba changes
pg_default_hba_rules:             # postgres host-based auth rules by default
  - title: allow intranet admin password access
    role: common
    rules:
      - host    all     +dbrole_admin               10.0.0.0/8          md5
      - host    all     +dbrole_admin               172.16.0.0/12       md5
      - host    all     +dbrole_admin               192.168.0.0/16      md5
  - title: allow intranet password access
    role: common
    rules:
      - host    all             all                 10.0.0.0/8          md5
      - host    all             all                 172.16.0.0/12       md5
      - host    all             all                 192.168.0.0/16      md5
  - title: allow local read/write (local production user via pgbouncer)
    role: common
    rules:
      - local   all     +dbrole_readonly                                md5
      - host    all     +dbrole_readonly            127.0.0.1/32         md5
  - title: allow offline query (ETL,SAGA,Interactive) on offline instance
    role: offline
    rules:
      - host    all     +dbrole_offline             10.0.0.0/8        md5
      - host    all     +dbrole_offline             172.16.0.0/12     md5
      - host    all     +dbrole_offline             192.168.0.0/16    md5
pgb_default_hba_rules:            # pgbouncer host-based authentication rules
  - title: local password access
    role: common
    rules:
      - local  all          all                                     md5
      - host   all          all                     127.0.0.1/32    md5
  - title: intranet password access
    role: common
    rules:
      - host   all          all                     10.0.0.0/8      md5
      - host   all          all                     172.16.0.0/12   md5
      - host   all          all                     192.168.0.0/16  md5

#-----------------------------------------------------------------
# PG_BACKUP
#-----------------------------------------------------------------
pgbackrest_enabled: true          # setup pgbackrest on pgsql hosts?
pgbackrest_clean: false           # remove existing pgbackrest data during init?
pgbackrest_log_dir: /pg/log/pgbackrest # pgbackrest log dir, /pg/log/pgbackrest by default
pgbackrest_repo: |                # pgbackrest backup repo config
  repo1-path=/pg/backup/
  repo1-retention-full-type=time
  repo1-retention-full=14
  repo1-retention-diff=3

#-----------------------------------------------------------------
# INTERNAL
#-----------------------------------------------------------------
pg_exists: false
pg_cert_exists: false
#-----------------------------------------------------------------
# NODE_TUNE (Reference)
#-----------------------------------------------------------------
node_tune: oltp                   # install and activate tuned profile: none|oltp|olap|crit|tiny
#-----------------------------------------------------------------
# ETCD (Reference)
#-----------------------------------------------------------------
etcd_port: 2379                   # etcd client port, 2379 by default
etcd_api: 2                       # etcd api version used, 2 by default
#-----------------------------------------------------------------
# CA (Reference)
#-----------------------------------------------------------------
cert_validity: 7300d              # cert validity, 20 years by default
...