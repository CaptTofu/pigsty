#==============================================================#
# File      :   pgbackrest.conf
# Desc      :   PgBackrest Config for {{ pg_instance }} {{ pg_role }}
# Time      :   {{ '%Y-%m-%d %H:%M' | strftime }}
# Host      :   {{ pg_instance }} @ {{ inventory_hostname }}:{{ pg_port }}
# Path      :   /etc/pgbackrest/pgbackrest.conf
# Note      :   ANSIBLE MANAGED, DO NOT CHANGE!
# Author    :   Ruohang Feng (rh@vonng.com)
# License   :   AGPLv3
#==============================================================#
[{{ pg_cluster }}]
#==============================================================#
# 1. stanza                                                    #
# https://pgbackrest.org/configuration.html#section-stanza     #
#==============================================================#
pg1-path={{ pg_data }}
pg1-port={{ pg_port }}


[global]
#==============================================================#
# 2. archive                                                   #
# https://pgbackrest.org/configuration.html#section-archive    #
#==============================================================#
archive-async=y


#==============================================================#
# 3. backup                                                    #
# https://pgbackrest.org/configuration.html#section-backup     #
#==============================================================#
annotation=pg_cluster={{ pg_cluster }}
start-fast=y
expire-auto=y
{% if pgbackrest_from_standby|bool %}backup-standby=y{% endif %}


#==============================================================#
# 4. general                                                   #
# https://pgbackrest.org/configuration.html#section-general    #
#==============================================================#
compress-type=lz4
spool-path=/pg/tmp


#==============================================================#
# 5. log                                                       #
# https://pgbackrest.org/configuration.html#section-log        #
#==============================================================#
log-level-console=info
log-level-file=detail
log-path={{ pgbackrest_log_dir }}


#==============================================================#
# 6. repository                                                #
# https://pgbackrest.org/configuration.html#section-repository #
#==============================================================#
{% if pgbackrest_repo_mode == 'local' %}
repo1-path={{ pgbackrest_local_path }}/{{ pg_cluster }}-{{ pg_version }}
{% elif pgbackrest_repo_mode == 'minio' %}
repo1-type=s3
repo1-s3-endpoint={{ minio_domain }}
repo1-storage-port={{ minio_port }}
repo1-storage-ca-file=/etc/pki/ca.crt 
repo1-s3-uri-style=path
repo1-path=/{{ pg_cluster }}-{{ pg_version }}
repo1-s3-bucket={{ pgbackrest_s3_bucket }}
repo1-s3-key={{ pgbackrest_s3_key }}
repo1-s3-key-secret={{ pgbackrest_s3_secret }}
repo1-s3-region={{ pgbackrest_s3_region }}
{% endif %}
repo1-retention-full-type={{ pgbackrest_retention_type }}
repo1-retention-full={{ pgbackrest_retention_full }}
repo1-retention-diff={{ pgbackrest_retention_diff }}
{% if pgbackrest_cipher_type == 'aes-256-cbc' and pgbackrest_cipher_pass is defined %}
repo1-cipher-type={{ pgbackrest_cipher_type }}
repo1-cipher-pass={{ pgbackrest_cipher_pass }}
{% endif %}


#==============================================================#
# 7. restore                                                   #
# https://pgbackrest.org/configuration.html#section-restore    #
#==============================================================#
link-all=y
delta=y


#==============================================================#
# 8. server                                                    #
# https://pgbackrest.org/configuration.html#section-server     #
#==============================================================#
{% if pgbackrest_repo_mode == 'infra' %}
tls-server-address=*
tls-server-port={{ pgbackrest_tls_port }}
tls-server-ca-file=/etc/pki/ca.crt
tls-server-cert-file=/pg/cert/server.crt
tls-server-key-file=/pg/cert/server.key
tls-server-auth={{ pg_instance }}={{ pg_cluster }}
{% endif %}


#==============================================================#
# 9. adhoc (parallel)                                          #
#==============================================================#
[global:restore]
process-max={{ ([node_cpu|int, 8])|min|int }}

[global:archive-push]
process-max={{ ([(node_cpu|int / 2)|round(0,'ceil'), 4])|min|int }}

[global:archive-get]
process-max={{ ([(node_cpu|int / 4)|round(0,'ceil'), 2])|min|int }}
