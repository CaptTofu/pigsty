---
# only primary meta node ( inventory_hostname == meta_ip ) is allowed to execute this tasks
#------------------------------------------------------------------------------
# Check CA
#------------------------------------------------------------------------------
- name: check ca exist on primary meta node
  tags: ca_check
  block:

    # ca exists if both key & crt exists on /etc/pki/
    - name: check /etc/pki/ca.crt exists
      stat: path="/etc/pki/ca.crt"
      register: ca_crt_exists
    - name: check /etc/pki/ca.key exists
      stat: path="/etc/pki/ca.key"
      register: ca_key_exists

    - name: check ca exists on primary meta node
      connection: local
      set_fact:
        ca_exists: "{{ ca_crt_exists.stat.exists and ca_key_exists.stat.exists }}"
    - debug:
        msg: "ca exists = {{ ca_exists }}, ca method = {{ ca_method }}, create = {% if (not ca_exists|bool and ca_method == 'create') or ca_method == 'recreate' %}Yes{% else %}No{% endif %}"


#------------------------------------------------------------------------------
# Create CA
#------------------------------------------------------------------------------
# if ca_method = create : generate ca if not exists
# if ca_method = recreate : always re-generate new ca
- name: Create Self-Signed CA
  tags: ca_gen
  when: (not ca_exists|bool and ca_method == 'create') or ca_method == 'recreate'
  block:

    # generate ca private key on /etc/pki/
    - name: generate ca private key
      openssl_privatekey: path="/etc/pki/ca.key" mode=0600 owner=root group=root

    # generate ca self-signing csr
    - name: generate ca signing request
      openssl_csr:
        path: /etc/pki/CA/ca.csr
        privatekey_path: /etc/pki/ca.key
        common_name: pigsty-ca
        organization_name: pigsty
        organizational_unit_name: ca
        basic_constraints:
          - CA:TRUE
          - pathlen:1
        basic_constraints_critical: yes
        key_usage: [ keyCertSign, cRLSign, digitalSignature ]
        # force: false                      # force recreate csr
        # key_usage_critical: true
        # use_common_name_for_san: false

    # approve csr and get self-signed ca cert
    - name: generate self-signed ca.crt
      openssl_certificate:
        path: /etc/pki/ca.crt
        csr_path: /etc/pki/CA/ca.csr
        privatekey_path: /etc/pki/ca.key
        provider: selfsigned
        selfsigned_not_after: +36500d
        mode: 0644
        owner: root

- name: fetch ca cert and key to local
  tags: ca_fetch
  when: meta_ip == inventory_hostname
  fetch: src={{ item.src }} dest={{ item.dest }} flat=yes
  with_items:
    - { src: /etc/pki/ca.crt , dest: files/pki/ca/ca.crt }
    - { src: /etc/pki/ca.key , dest: files/pki/ca/ca.key }
...