# tuned configuration
#==============================================================#
# File      :   tuned.conf
# Ctime     :   2020-06-29
# Mtime     :   2022-07-18
# Desc      :   Tune operating system to tiny mode
# Path      :   /etc/tuned/tiny/tuned.conf
# Author    :   Vonng(fengruohang@outlook.com)
# Copyright (C) 2018-2022 Ruohang Feng
#==============================================================#

[main]
summary=Optimize for PostgreSQL TINY System
# include=virtual-guest

[vm]
# disable transparent hugepages
transparent_hugepages=never

[sysctl]
#-------------------------------------------------------------#
#                           KERNEL                            #
#-------------------------------------------------------------#
# disable numa balancing
kernel.numa_balancing=0

# total shmem size in bytesï¼š $(expr $(getconf _PHYS_PAGES) /  * 0.75  \* $(getconf PAGE_SIZE))
# total mem: {{ node_mem_bytes }}
kernel.shmall = {{ (node_mem_bytes|int * 0.75)|int }}

# total shmax size in pages:  $(expr $(getconf _PHYS_PAGES) * 0.75 )
kernel.shmax = {{ (node_pages|int * 0.75)|int }}

# If a workload mostly uses anonymous memory and it hits this limit, the entire
# working set is buffered for I/O, and any more write buffering would require
# swapping, so it's time to throttle writes until I/O can catch up.  Workloads
# that mostly use file mappings may be able to use even higher values.
#
# The generator of dirty data starts writeback at this percentage (system default
# is 20%)
vm.dirty_ratio = 50

# Filesystem I/O is usually much more efficient than swapping, so try to keep
# swapping low.  It's usually safe to go even lower than this on systems with
# server-grade storage.
vm.swappiness = 10

# alloc {{ node_hugepage_ratio|float|round(4) * 100 }}% mem as hugepage (plus 40MB as cushion), 32.5G as max
{% if node_hugepage_ratio|float > 0 %}
vm.nr_hugepages = {{ ([ (node_mem_bytes|int / 2097152.0 * node_hugepage_ratio )|int + 20 ,16692])|min }}
{% endif %}

#-------------------------------------------------------------#
#                          Network                            #
#-------------------------------------------------------------#
# tcp options
net.ipv4.tcp_timestamps=1
net.ipv4.tcp_tw_reuse=1
net.ipv4.tcp_tw_recycle=0
net.ipv4.tcp_syncookies=0
net.ipv4.tcp_synack_retries=1
net.ipv4.tcp_syn_retries=1

# tcp probe fail interval: 75s -> 20s
net.ipv4.tcp_keepalive_intvl=20
# tcp break after 3 * 20s = 1m
net.ipv4.tcp_keepalive_probes=3
# probe peroid = 1 min
net.ipv4.tcp_keepalive_time=60
