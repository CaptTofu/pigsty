---
#------------------------------------------------------------------------------
# Add tuned profile
#------------------------------------------------------------------------------
- name: Node tuned
  tags: node_tuned
  when: node_tune is defined and node_tune != 'none'
  block:

    # get memory parameters to tune the node
    - name: Get node basic facts
      shell: echo "$(getconf _PHYS_PAGES) $(getconf PAGE_SIZE)"
      register: pg_node_fact
    - name: Calculate node parameters
      connection: local
      set_fact:
        mem_half_bytes: "{% set fact_list = pg_node_fact.stdout.split() %}{{ (fact_list[0]|int * 0.5 * fact_list[1]|int)|int }}"
        mem_half_pages: "{% set fact_list = pg_node_fact.stdout.split() %}{{ (fact_list[0]|int * 0.5)|int }}"

    - name: Create tuned profiles
      file: path=/etc/tuned/{{ item }} state=directory mode=0755
      with_items: [ oltp, olap, crit, tiny ]

    - name: Render tuned profiles
      template: src=tuned-{{ item }}.conf dest=/etc/tuned/{{ item }}/tuned.conf mode=0644
      with_items: [ oltp, olap, crit, tiny ]

    - name: Active tuned profile
      tags: node_tune_active
      ignore_errors: true
      command: tuned-adm profile {{ node_tune }}

    - name: Change additional sysctl params
      tags: node_sysctl
      ignore_errors: true
      sysctl:
        name: "{{ item.key }}"
        value: "{{ item.value }}"
        sysctl_set: yes
        state: present
        reload: yes
      with_dict: "{{ node_sysctl_params }}"
...