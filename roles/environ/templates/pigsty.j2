#!/bin/bash
####################################
# Auto generated by Ansible:
# ./infra.yml -t environ_vars
# ~/.pigsty for admin user
####################################

#==================================#
# set default database for postgres
export PGUSER={{ pg_admin_username }}
export PGSERVICE="meta"
export METADB_URL="service=meta"

#==================================#
# passing environ for grafana & other
export LOKI_ENDPOINT={{ loki_endpoint | regex_replace('\${meta_ip}', meta_ip ) }}
export GRAFANA_ENDPOINT={{ grafana_endpoint | regex_replace('\${meta_ip}', meta_ip ) }}
export GRAFANA_USERNAME={{ grafana_admin_username }}
export GRAFANA_PASSWORD={{ grafana_admin_password }}
export GRAFANA_PUBLICDIR=/usr/share/grafana/public

#==================================#
# passing domain names in k=v, format
export NGINX_UPSTREAM={% for entry in nginx_upstream %}{% if not loop.first %},{% endif %}{{ entry.name }}={{ entry.domain }}{% endfor %}


#==================================#
# export PIGSTY_HOME if exists on home dir
if [[ -d ~/pigsty ]]; then
  export PIGSTY_HOME="${HOME}/pigsty"
fi
if [[ -d /etc/pigsty ]]; then
  export PIGSTY_DASHBOARD_DIR=/etc/pigsty/dashboards
  export PIGSTY_DATASOURCE_DIR=/etc/pigsty/datasource
  export PIGSTY_PLAYBOOK_DIR=/etc/pigsty/playbooks
fi

#==========================
# pglog analysis shortcuts
alias pglog="psql   service=meta -AXtwc 'TRUNCATE pglog.sample CASCADE; COPY pglog.sample14 FROM STDIN CSV;'"
alias pglog12="psql service=meta -AXtwc 'TRUNCATE pglog.sample CASCADE; COPY pglog.sample12 FROM STDIN CSV;'"
alias pglog13="psql service=meta -AXtwc 'TRUNCATE pglog.sample CASCADE; COPY pglog.sample13 FROM STDIN CSV;'"
alias pglog14="psql service=meta -AXtwc 'TRUNCATE pglog.sample CASCADE; COPY pglog.sample14 FROM STDIN CSV;'"

### default: get pgsql csvlog (localhost @ today)
function catlog(){ # getlog <ip|host> <date:YYYY-MM-DD>
  local node=${1-'127.0.0.1'}
  local today=$(date '+%Y-%m-%d')
  local ds=${2-${today}}
  local logpath=$(sudo grep 'log_directory' /pg/data/postgresql.conf | awk '{print $3}' | tr -d "'")
  ssh -t "${node}" "sudo cat ${logpath}/postgresql-${ds}.csv"
}

