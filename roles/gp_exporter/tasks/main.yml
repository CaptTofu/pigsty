---
##########################################################################################
# examples:
#
#mx-sdw:
#  hosts:
#    10.10.10.11:
#      gp_node: 1        # greenplum segment node
#      gp_instances:     # greenplum segment instances
#        6000: { pg_cluster: mx-seg1, pg_seq: 1, pg_role: primary , pg_exporter_port: 9633 }
#        6001: { pg_cluster: mx-seg2, pg_seq: 2, pg_role: replica , pg_exporter_port: 9634 }
#    10.10.10.12:
#      gp_node: 2        # greenplum segment node
#      gp_segments:
#        6000: { pg_cluster: mx-seg2, pg_seq: 1, pg_role: primary , pg_exporter_port: 9633  }
#        6001: { pg_cluster: mx-seg3, pg_seq: 2, pg_role: replica , pg_exporter_port: 9634  }
#    10.10.10.13:
#      gp_node: 3        # greenplum segment node
#      gp_segments:
#        6000: { pg_cluster: mx-seg3, pg_seq: 1, pg_role: primary , pg_exporter_port: 9633 }
#        6001: { pg_cluster: mx-seg1, pg_seq: 2, pg_role: replica , pg_exporter_port: 9634 }
##########################################################################################


# overwrite host/node level variable with instance level metrics
# use overwritten insvar to create pg_exporters corresponding to pg_instances
- include_tasks: pg_exporter.yml
  tags: gp_exporter
  when: pg_instances is defined and pg_instances|type_debug == "dict"
  vars:
    insvar : '{{ hostvars[inventory_hostname]._vars  | combine( item.value ) | combine({"pg_port": item.key|int }) }}'
  with_dict: "{{ pg_instances }}"


# deregister pg_exporter
- name: Deregister pgssql exporter from prometheus
  tags: [ pg_deregister , deregister_prometheus ]
  delegate_to: '{{ item }}'
  with_items: '{{ groups["meta"] }}'
  file: path=/etc/prometheus/targets/pgsql/{{ nodename }}.yml state=absent

# prometheus are idempotent on multiple meta nodes
# /etc/prometheus/targets/pgsql/{{ pg_instance }}.yml
- name: Register pgsql exporter as prometheus target
  tags: [ pg_exporter, gp_register, register_prometheus ]
  delegate_to: '{{ item }}'
  with_items: '{{ groups["meta"][0] }}'
  copy:
    dest: /etc/prometheus/targets/pgsql/{{ nodename }}.yml
    content: |
      # {{ nodename }} [{{ gp_role }}]
      {% for pg_port, conf in pg_instances.items() %}
      # {{ conf.pg_cluster }}-{{ conf.pg_seq }} [{{ conf.pg_role }}] @ {{ inventory_hostname }}:{{ pg_port }}
      - labels: { cls: {{ conf.pg_cluster }}, ins: {{ conf.pg_cluster }}-{{ conf.pg_seq }}, ip: {{ inventory_hostname }} }
        targets: [{{ inventory_hostname }}:{{ conf.pg_exporter_port }}]
      {% endfor %}

...