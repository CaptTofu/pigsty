---
#------------------------------------------------------------------------------
# Register haproxy admin endpoint to meta node
# allow access to haproxy admin page via nginx on meta node
#------------------------------------------------------------------------------

#------------------------------------------------------------------------------
# add upstream server definition on /etc/nginx/conf.d/haproxy/upstream-{{ pg_cluster }}.conf
#------------------------------------------------------------------------------
- name: Register haproxy upstream
  tags: register_haproxy_upstream
  delegate_to: meta
  become: yes
  run_once: true     # assume playbook are execute among one single cluster
  copy:
    dest: /etc/nginx/conf.d/haproxy/upstream-{{ pg_cluster }}.conf
    content: |
      {% for host in hostvars|json_query(cluster_query)|sort(attribute='pg_seq') %}
      {% if host.haproxy_enabled %}
      upstream {{ host.pg_cluster }}-{{ host.pg_seq }} {
          server {{ host.inventory_hostname }}:{{ host.haproxy_exporter_port }} max_fails=0;
      }
      {% endif %}
      {% endfor %}
  vars:
    cluster_query: "[@.*][0][?pg_cluster=='{{ pg_cluster }}']"

#------------------------------------------------------------------------------
# add url rewrite rule for this cluster
#------------------------------------------------------------------------------
- name: Register haproxy url location
  tags: register_haproxy_location
  delegate_to: meta
  become: yes
  run_once: true     # assume playbook are execute among one single cluster
  copy:
    dest: /etc/nginx/conf.d/haproxy/location-{{ pg_cluster }}.conf
    content: |
      {% for host in hostvars|json_query(cluster_query)|sort(attribute='pg_seq') %}
      {% if host.haproxy_enabled %}
          location ^~/{{ host.pg_cluster }}-{{ host.pg_seq }}/ {
              proxy_pass http://{{ host.pg_cluster }}-{{ host.pg_seq }};
              proxy_connect_timeout 2;
          }
      {% endif %}
      {% endfor %}
  vars:
    cluster_query: "[@.*][0][?pg_cluster=='{{ pg_cluster }}']"


#------------------------------------------------------------------------------
# index html page for single cluster
#------------------------------------------------------------------------------
- name: Register haproxy cluster index page
  tags: register_haproxy_index
  delegate_to: meta
  become: yes
  run_once: true     # assume playbook are execute among one single cluster
  copy:
    dest: "{{ repo_home }}/haproxy-{{ pg_cluster }}.html"
    content: |
      <html lang="en"><head><title>Pigsty HAProxy</title></head><br>
      <body><h1>PIGSTY HAPROXY INDEX for Cluster {{ item }}</h1><div><ul>

      {% for host in hostvars|json_query(cluster_query)|sort(attribute='pg_seq') %}
      {% if host.haproxy_enabled %}
      <li><a href="/{{ host.pg_cluster }}-{{ host.pg_seq }}/"><h2>  {{ host.pg_cluster }}-{{ host.pg_seq }} </h2></a>
      <code>http://{{ host.inventory_hostname }}:{{ host.haproxy_exporter_port }}  Cluster: {{ host.pg_cluster }} Role: {{ host.pg_role }})</code></li>
      {% endif %}
      {% endfor %}

      </ul></div></body></html>
  vars:
    cluster_query: "[@.*][0][?pg_cluster=='{{ pg_cluster }}']"
  with_items: "{{ hostvars|json_query('*.pg_cluster')|sort|unique }}"    # distinct cluster names


#------------------------------------------------------------------------------
# update global index page
#------------------------------------------------------------------------------
# TODO: WILL NOT UPDATE GLOBAL INDEX HERE

...