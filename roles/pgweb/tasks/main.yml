---
#------------------------------------------------------------------------------
# Make sure pgweb user exists
#------------------------------------------------------------------------------
# if root or default (admin user) is used, the pgweb user may have ssh access
# to other node, which may be dangerous. use with cautious

- name: Create pgweb user
  tags: pgweb_user
  when: pgweb_username != 'root' and pgweb_username != 'default'
  user: name={{ pgweb_username }}

- name: Get current username when default
  tags: pgweb_user
  when: pgweb_username == 'default'
  block:
    - name: Run whoami without become
      command: whoami
      changed_when: false
      become: false
      register: whoami

    - name: Overwrite pgweb username
      set_fact:
        pgweb_username: "{{ whoami.stdout }}"



#------------------------------------------------------------------------------
# create systemd service from pgweb
#------------------------------------------------------------------------------
- name: Extract pgweb binaries to /usr/bin
  tags: pgweb_install
  ignore_errors: true
  become: yes
  block:
    - name: Unarchive pgweb archive file from local repo
      unarchive:
        src: "{{ repo_home }}/{{ repo_name }}/pgweb_linux_amd64.zip"
        dest: /usr/local/bin/
        remote_src: yes

    - name: Move pgweb binary to /usr/local/bin/
      shell: |
        sudo mv /usr/local/bin/pgweb_linux_amd64 /usr/local/bin/pgweb


#------------------------------------------------------------------------------
# create systemd service from pgweb
#------------------------------------------------------------------------------
- name: Setup pgweb systemd service
  tags: pgweb_launch
  become: yes
  ignore_errors: true
  block:
    # setup systemd service for pgweb
    - name: Copy pgweb systemd service
      template: src=pgweb.service.j2 dest=/usr/lib/systemd/system/pgweb.service

    - name: Launch pgweb service unit
      systemd: name=pgweb state=restarted enabled=yes daemon_reload=yes

    - name: Wait for pgweb lab online
      wait_for: host=127.0.0.1 port=8081 state=started timeout=30


...