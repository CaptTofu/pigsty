---
#------------------------------------------------------------------------------
# Register HAProxy to Nginx
#------------------------------------------------------------------------------
# nginx are idempotent on multiple meta nodes
- name: Register haproxy instance to nginx
  when: haproxy_enabled|bool
  become: yes
  block:
    - name: Create haproxy config dir resource dirs on /etc/pigsty
      delegate_to: '{{ item }}'
      with_items: '{{ groups["meta"] }}'
      file: path=/etc/nginx/conf.d/haproxy state=directory owner=root

    # /etc/nginx/conf.d/haproxy/upstream-{{ pg_instance }}.conf
    - name: Register haproxy upstream to nginx
      delegate_to: '{{ item }}'
      with_items: '{{ groups["meta"] }}'
      copy:
        dest: /etc/nginx/conf.d/haproxy/upstream-{{ pg_cluster }}-{{ pg_seq }}.conf
        content: |
          upstream {{ pg_cluster }}-{{ pg_seq }} {
              server {{ inventory_hostname }}:{{ haproxy_exporter_port }} max_fails=0;
          }

    # /etc/nginx/conf.d/haproxy/location-{{ pg_instance }}.conf
    - name: Register haproxy url location to nginx
      delegate_to: '{{ item }}'
      with_items: '{{ groups["meta"] }}'
      copy:
        dest: /etc/nginx/conf.d/haproxy/location-{{ pg_cluster }}-{{ pg_seq }}.conf
        content: |
          location ^~/{{ pg_cluster }}-{{ pg_seq }}/ {
              proxy_pass http://{{ pg_cluster }}-{{ pg_seq }};
              proxy_connect_timeout 1;
          }

    # reload meta node nginx (maybe not appropriate here)
    - name: Reload nginx to finish haproxy register
      delegate_to: '{{ item }}'
      run_once: true
      with_items: '{{ groups["meta"] }}'
      systemd: name=nginx state=reloaded enabled=yes daemon_reload=yes

...