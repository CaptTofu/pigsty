---

###############################################################################
# Setup Redis Nodes
###############################################################################

#------------------------------------------------------------------------------
# Install
#------------------------------------------------------------------------------
- import_tasks: node.yml
  tags: [ redis_node  ]

#------------------------------------------------------------------------------
# Monitor (node_exporter & redis_exporter)
#------------------------------------------------------------------------------
- import_tasks: monitor.yml
  tags: [ redis_monitor, redis_node ]




###############################################################################
# Setup Redis Instances
###############################################################################

#------------------------------------------------------------------------------
# Assert before launch instances
#------------------------------------------------------------------------------
- name: Check necessary variables exists
  tags: [ redis_ins ]
  assert:
    that:
      - redis_cluster is defined and redis_cluster != ''
      - redis_instances is defined
      - redis_instances | type_debug == "dict"
    fail_msg: variable `redis_cluster|redis_instances` are required for redis deployment

#------------------------------------------------------------------------------
# Create redis instances
#------------------------------------------------------------------------------
- include_tasks: instance.yml
  tags: redis_ins
  vars:
    port: "{{ item.key }}"
    conf: "{{ item.value|default({}) }}"
  with_dict: "{{ redis_instances }}"


#------------------------------------------------------------------------------
# create redis cluster if redis_mode = 'cluster'
#------------------------------------------------------------------------------
- name: Join redis cluster
  when: redis_mode == 'cluster'
  tags: [ redis_ins, redis_join ]
  delegate_to: '{{ groups["meta"][0] }}'
  run_once: true
  block:

    - name: Fetch redis cluster memberships
      set_fact:
        redis_cluster_members={{ hostvars| json_query(redis_cluster_members_query) }}
      vars:
        redis_cluster_members_query: "[@.*][0][?redis_cluster=='{{ redis_cluster }}']"

    - name: Render redis cluster join script
      copy:
        dest: /tmp/{{ redis_cluster }}-join.sh
        mode: 0755
        owner: root
        content: |
          #!/bin/bash
          /bin/redis-cli --cluster create --cluster-yes \
          {% for node in redis_cluster_members %}
          {% for port in node.redis_instances %}
            {{ node.inventory_hostname }}:{{ port }} \
          {% endfor %}
          {% endfor %}
            --cluster-replicas {{ redis_cluster_replicas|default(1) }}

    - name: Join redis clusters
      shell: "/tmp/{{ redis_cluster }}-join.sh"



################################################################################
## Register
################################################################################

#------------------------------------------------------------------------------
# register redis targets to prometheus on meta nodes
#------------------------------------------------------------------------------
# /etc/prometheus/targets/redis/{{ redis_node }}.yml
- name: Register redis instance as prometheus target
  tags: [ redis_ins, redis_register, register_prometheus ]
  delegate_to: '{{ item }}'
  with_items: '{{ groups["meta"] }}'
  become: yes
  copy:
    dest: /etc/prometheus/targets/redis/{{ redis_cluster }}-{{ redis_node }}.yml
    content: |
      # {{ redis_cluster }}-{{ redis_node }} @ {{ inventory_hostname }}

      {% for port in redis_instances %}
      - labels: { cls: {{ redis_cluster }}, ins: {{ redis_cluster }}-{{ redis_node }}-{{ port }}, instance: {{ inventory_hostname }}:{{ port }} }
        targets: [ redis://{{ inventory_hostname }}:{{ port }} ]

      {% endfor %}


...

