---
#--------------------------------------------------------------#
# Create Directories                                   [env_dir]
#--------------------------------------------------------------#
- name: create etc pigsty dirs
  tags: env_dir
  become: yes
  file: path={{ item }} state=directory owner=root
  with_items:
    - /etc/pigsty
    - /etc/pigsty/
    - /etc/pigsty/playbooks
    - /etc/pigsty/dashboards
    - /etc/pigsty/datasources

#--------------------------------------------------------------#
# Setup pgpass & pg_service                             [env_pg]
#--------------------------------------------------------------#
- name: setup postgres admin environment
  become: no  # write to admin user's home rather than root's
  tags: env_pg
  ignore_errors: true
  block:

    # generate pg pass
    - name: write postgres user credential to pgpass
      tags: env_pgpass
      lineinfile: dest=~/.pgpass state=present create=yes mode=0600 line={{ item }}
      with_items:
        - "*:*:*:{{ pg_replication_username }}:{{ pg_replication_password }}"
        - "*:*:*:{{ pg_monitor_username }}:{{ pg_monitor_password }}"
        - "*:*:*:{{ pg_admin_username }}:{{ pg_admin_password }}"

    # generate pg_service list
    - name: write pg_service conf
      tags: env_pgscv
      template:
        src: env/pg_service.conf.j2
        dest: ~/.pg_service.conf
        mode: '0600'

    # generate pg server list (for pgadmin)
    - name: write pg list servers.json
      tags: env_pglist
      template:
        src: env/servers.j2
        dest: ~/.servers.json
        mode: '0600'
      vars:
        servers_query: '[@.*][0][?pg_cluster && pg_cluster!=""].{pg_cluster: pg_cluster,pg_seq: pg_seq,pg_port: pg_port,pg_host: inventory_hostname,pg_admin_username:pg_admin_username,pg_admin_password: pg_admin_password}'

    # write patroni ctl credential
    - name: write pigsty patronictl conf
      become: yes
      tags: env_pgctl
      template:
        src: env/patronictl.yml.j2
        dest: /etc/pigsty/patronictl.yml
        mode: 0644

#--------------------------------------------------------------#
# Setup environment variables                          [env_var]
#--------------------------------------------------------------#
- name: setup environment variables
  become: no
  tags: env_var
  ignore_errors: true
  block:

    # create ~/.pigsty bash profile
    - name: write environment file
      template:
        src: env/pigsty.j2
        dest: ~/.pigsty
        mode: 0700
      vars:
        gf_endpoint: "{{ 'http://' +  infra_portal.grafana.endpoint|replace('${admin_ip}', admin_ip ) }}"
        portals: "{% for key,value in infra_portal.items() %}{% if value.domain is defined and value.domain != '' %}{% if not loop.first %},{% endif %}{{ key }}={{ value.domain }}{% endif %}{% endfor %}"
        use_https: "{% if nginx_sslmode == 'enforce' %}true{% else %}false{% endif %}"

    # load ~/.pigsty in ~/.bashrc
    - name: load environment vars
      lineinfile:
        dest: ~/.bashrc
        state: present
        create: yes
        mode: 0644
        line: '[ -f ~/.pigsty ] && . ~/.pigsty'

...