---
#------------------------------------------------------------------------------
# Consul Config
#------------------------------------------------------------------------------
- name: config consul
  tags: consul_conf
  block:

    # print consul facts
    - name: show consul facts
      tags: consul_id
      connection: local
      debug:
        msg: "dcs_nodename = {{ dcs_nodename }}   , nodename = {{ nodename }}   , ip = {{ inventory_hostname }}   , quorum = {{ ((dcs_servers.values() | length / 2)|round(0, 'floor') + 1)|int }} of {{ dcs_servers.values() | length }} {% if consul_exists %}existing{% endif %}"

    #------------------------------------------------------------------------------
    # render main config
    #------------------------------------------------------------------------------
    # remove hcl format config
    - name: remove consul.hcl file
      file: path=/etc/consul.d/consul.hcl state=absent

    # "disable_hostname": true is optional
    - name: render /etc/consul.d/consul.json
      template: src=consul.json.j2 dest=/etc/consul.d/consul.json owner=consul group=dcs mode=0644

    - name: render /etc/consul.d/consul-meta.json
      copy:
        dest: /etc/consul.d/consul-meta.json
        owner: consul
        group: dcs
        mode: 0644
        content: |
          {
            "node_meta": {
              "cluster": "{{ node_cluster }}",
              "instance": "{{ nodename }}"
            }
          }

    #------------------------------------------------------------------------------
    # render server config on DCS SERVERs
    #------------------------------------------------------------------------------
    - name: render /etc/consul.d/consul-server.json
      when: inventory_hostname in dcs_servers.values()
      copy:
        dest: /etc/consul.d/consul-server.json
        mode: 0644
        owner: consul
        group: dcs
        content: |
          {
            "server": true,
            "bootstrap_expect": {{ ((dcs_servers.values() | length / 2)|round(0, 'floor') + 1)|int }}
          }

    #------------------------------------------------------------------------------
    # render ui config on META NODEs
    #------------------------------------------------------------------------------
    - name: render /etc/consul.d/consul-ui.json
      when: meta_node|bool
      copy:
        dest: /etc/consul.d/consul-ui.json
        mode: 0644
        owner: consul
        group: dcs
        content: |
          {
            "ui_config": {
              "enabled": true
            }
          }


#------------------------------------------------------------------------------
# Consul Systemd Service
#------------------------------------------------------------------------------

    #------------------------------------------------------------------------------
    # copy systemd service
    #------------------------------------------------------------------------------
    - name: setup consul systemd service
      copy: src=consul.service dest=/usr/lib/systemd/system/consul.service

    #------------------------------------------------------------------------------
    # render consul service drop-in
    #------------------------------------------------------------------------------
    - name: Render consul service drop-in on /etc/systemd/system/consul.service.d/
      when: dcs_ssl_enabled|bool
      block:

        - name: create /etc/systemd/system/consul.service.d/
          file: path=/etc/systemd/system/consul.service.d state=directory

        - name: copy consul ssl drop-in file
          copy:
            dest: /etc/systemd/system/consul.service.d/override.conf
            owner: root
            mode: 0644
            content: |
              [Service]
              Environment="CONSUL_HTTP_SSL=true"


#------------------------------------------------------------------------------
# Config consul cert
#------------------------------------------------------------------------------
# all consul agents / servers
- name: generate consul certs
  tags: consul_cert
  when: dcs_ssl_enabled|bool # and inventory_hostname in dcs_servers.values()
  delegate_to: "{{ meta_ip }}"
  block:

    - name: generate consul private key
      openssl_privatekey:
        path: "/etc/pki/CA/consul-{{ dcs_nodename }}.key"
        mode: 0644

    - name: generate consul signing request
      openssl_csr:
        path: "/etc/pki/CA/consul-{{ dcs_nodename }}.csr"
        privatekey_path: "/etc/pki/CA/consul-{{ dcs_nodename }}.key"
        common_name: "server.{{ dcs_name }}.consul"
        organization_name: pigsty
        organizational_unit_name: consul
        subject_alt_name:
          - DNS:localhost
          - "DNS:{{ dcs_nodename }}"
          - "DNS:server.{{ dcs_name }}.consul"
          - "DNS:{{ nodename }}"
          - IP:127.0.0.1
          - "IP:{{ inventory_hostname }}"

    - name: issue consul certificate
      openssl_certificate:
        path: "/etc/pki/CA/consul-{{ dcs_nodename }}.crt"
        csr_path: "/etc/pki/CA/consul-{{ dcs_nodename }}.csr"
        ownca_path: /etc/pki/ca.crt
        ownca_privatekey_path: /etc/pki/ca.key
        provider: ownca
        selfsigned_not_after: "+{{ cert_validity }}"
        mode: 0644

    # copy consul cert & key to local files/pki/consul
    - name: fetch consul cert and key
      fetch: src={{ item.src }} dest={{ item.dest }} flat=yes
      with_items:
        - { src: "/etc/pki/CA/consul-{{ dcs_nodename }}.crt" , dest: "files/pki/consul/consul-{{ dcs_nodename }}.crt" }
        - { src: "/etc/pki/CA/consul-{{ dcs_nodename }}.key" , dest: "files/pki/consul/consul-{{ dcs_nodename }}.key" }


#------------------------------------------------------------------------------
# Copy consul cert
#------------------------------------------------------------------------------
- name: copy consul cert
  tags: [ consul_cert, consul_cert_copy ]
  when: dcs_ssl_enabled|bool
  block:

    - name: create consul config ssl dir
      file: path=/etc/consul.d/ssl state=directory owner=consul group=dcs mode=0700
    - name: copy consul ssl cert
      copy: src="files/pki/consul/consul-{{ dcs_nodename }}.crt" dest="/etc/consul.d/ssl/consul.crt" owner=consul group=dcs mode=0644
    - name: copy consul ssl key
      copy: src="files/pki/consul/consul-{{ dcs_nodename }}.key" dest="/etc/consul.d/ssl/consul.key" owner=consul group=dcs mode=0600
...