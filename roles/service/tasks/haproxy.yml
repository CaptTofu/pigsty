---
#--------------------------------------------------------------#
# haproxy install
#--------------------------------------------------------------#
- name: Haproxy installation
  tags: haproxy_install
  block:
    - name: Make sure haproxy is installed
      package: name=haproxy state=present

    - name: Create haproxy directory
      file: path=/etc/haproxy state=directory

    - name: Copy haproxy systemd service file
      tags: haproxy_unit
      copy: src=haproxy.service dest=/usr/lib/systemd/system/haproxy.service


#--------------------------------------------------------------#
# render haproxy configuration
#--------------------------------------------------------------#
- name: Setup Haproxy
  tags: haproxy_config
  block:
    - name: Fetch postgres cluster memberships
      connection: local
      set_fact:
        pg_cluster_members={{ hostvars| json_query(pg_cluster_members_query) }}
        pg_instance="{{ pg_cluster }}-{{ pg_seq }}"
        pg_services="{{ pg_services + pg_services_extra }}"
      vars:
        pg_cluster_members_query: "[@.*][0][?pg_cluster=='{{ pg_cluster }}']"

    # - debug: {msg: "{{ pg_services }}"}
    - name: Templating /etc/haproxy/haproxy.cfg
      template: src=haproxy.cfg.j2 dest=/etc/haproxy/haproxy.cfg


#--------------------------------------------------------------#
# haproxy launch
#--------------------------------------------------------------#
- name: Restart Haproxy
  tags: haproxy_launch
  block:
    - name: Launch haproxy load balancer service
      tags: haproxy_restart
      when: haproxy_enabled
      systemd: name=haproxy state=restarted enabled=yes daemon_reload=yes

    - name: Wait for haproxy load balancer online
      wait_for: host=localhost port=9101 state=started timeout=10

#--------------------------------------------------------------#
# haproxy reload
#--------------------------------------------------------------#
- name: Reload haproxy load balancer service
  ignore_errors: true
  tags: haproxy_reload
  when: haproxy_enabled
  systemd: name=haproxy state=reloaded enabled=yes daemon_reload=yes

#--------------------------------------------------------------#
# Register Haproxy Service (optional)
#--------------------------------------------------------------#
- name: Register haproxy consul service
  tags: haproxy_register
  when: service_registry == 'consul'
  ignore_errors: true
  block:

    - name: Copy haproxy exporter definition
      template:
        src: svc-haproxy.json.j2
        dest: /etc/consul.d/svc-haproxy.json
        owner: consul
        group: postgres
        mode: 0660

    - name: Copy haproxy service definition
      template:
        src: svc-cluster-role.json.j2
        dest: /etc/consul.d/svc-{{ pg_cluster }}-{{ service.name }}.json
        owner: consul
        group: postgres
        mode: 0660
      vars:
        service: "{{ item }}"
      with_items: "{{ pg_services }}"

    - name: Reload haproxy consul service
      systemd: name=consul state=reloaded

...